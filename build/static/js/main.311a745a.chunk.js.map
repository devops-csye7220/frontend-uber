{"version":3,"sources":["api/UserServiceApi.js","api/LocationServiceApi.js","components/header.jsx","components/footer.jsx","components/landing.jsx","components/signup.jsx","components/login.jsx","components/map.jsx","AuthenticatedRoute.jsx","components/staffComponents/staffDashboard.jsx","StaffRoute.jsx","components/locationShow.jsx","Constants.js","api/BookingServiceApi.js","components/bookingComponents/bookingConfirmDetails.jsx","components/bookingComponents/filterCars.jsx","components/bookingComponents/bookingDashboard.jsx","components/bookingComponents/myBookings.jsx","components/bookingComponents/bookingDetails.jsx","components/myProfile.jsx","components/staffComponents/overview.jsx","components/adminComponents/adminSignup.jsx","components/staffComponents/createCar.jsx","components/staffComponents/createLocation.jsx","components/staffComponents/viewAllCustomers.jsx","components/staffComponents/viewCustomer.jsx","components/staffComponents/modifyCustomerDetails.jsx","components/staffComponents/viewAllBookings.jsx","components/staffComponents/viewBooking.jsx","components/staffComponents/viewCustomerBookings.jsx","components/staffComponents/viewAllCars.jsx","components/staffComponents/modifyCarDetails.jsx","components/staffComponents/viewAllLocations.jsx","components/staffComponents/ViewLocation.jsx","components/staffComponents/modifyLocationPage.jsx","App.js","serviceWorker.js","index.js","api/CarServiceApi.js"],"names":["api_url","process","REACT_APP_SERVER_URL","TOKEN_SESSION_ATTRIBUTE_NAME","TOKEN_HEADER_LENGTH","UserServiceApi","axios","get","headers","authorization","this","getUserToken","id","email","post","newUser","creds","console","log","user","patch","_id","token","localStorage","setItem","setupAxiosInterceptors","getItem","jwt_decode","slice","interceptors","request","use","config","isUserLoggedIn","getLoggedInUserDetails","usertype","removeItem","window","location","href","require","LocationServiceApi","newLocation","address","formatted_address","replace","create","url","Header","state","setState","isUserStaff","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","firstname","lastname","onClick","logout","Component","LandingPage","Card","Body","Title","Subtitle","Text","to","Button","SignUpPage","props","handleChange","event","errorMessage","target","name","value","handleSubmit","preventDefault","trim","password","test","String","toLowerCase","createNewUser","then","loginUser","res","registerSuccessfulLoginForJwt","data","catch","error","response","message","bind","Alert","show","Img","style","margin","width","src","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","required","pattern","title","LoginPage","MapContainer","mapOnMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","mapOnMapClick","locations","location_array","getAllLocations","forEach","element","getGeocodeFromAddress","object","lat","results","geometry","lng","cars","push","height","google","initialCenter","zoom","map","position","onClose","onInfoWindowClose","visible","React","GoogleApiWrapper","apiKey","AuthenticatedRoute","FunctionSelectedStyle","borderBottom","color","FunctionNotSelectedStyle","StaffDashboard","currentLocation","pathname","isAdmin","isUserAdmin","Container","padding","maxWidth","Row","Col","md","paddingTop","children","StaffRoute","component","rest","render","matchProps","LocationShowPage","isLoading","location_id","match","split","getLocationFromId","newRes","locationObject","carId","CarServiceApi","getCar","car","Jumbotron","length","fluid","CarDescriptionComponent","sm","image","alt","marginTop","make","fueltype","bodytype","seats","colour","costperhour","CAR_COLOURS","CAR_BODY_TYPES","CAR_SEATS","CAR_FUEL_TYPES","booking","userId","bookingId","BookingConfirmDetailsPopUp","handleConfirmButton","destination","newBooking","pickupTime","returnTime","getLoggedInUserID","BookingServiceApi","createBooking","handleCancelButton","handleClose","destinations","destinationArray","defaultDestination","pickupTimeHours","Date","returnTimeHours","timeDeltaHours","getTime","parseInt","toFixed","cost","calculateBookingCost","Heading","ListGroup","Item","moment","format","FilterCarsPage","popUp","handleSubmitFilter","newFilter","availableCars","filterCars","selectedCar","togglePopUp","history","locationArray","as","carSeat","carFuel","carBodyType","carColour","Accordion","ind","textDecoration","eventKey","Modal","onHide","backdrop","keyboard","closeButton","BookingDashboard","newSearch","searchAvailableCars","updateCars","today_date","getFullYear","getMonth","padStart","getDate","getHours","getMinutes","nextBooking","nextBookingExists","successHeader","getNextBooking","Object","keys","currentTime","setMinutes","getTimezoneOffset","min","MyBookingPage","bookings","getUsersBookings","checkBookingPast","destinationObject","getAllCars","userDetails","getUserBookings","reverse","status","modifyBooking","idx","key","pickuptime","returntime","BookingDetailsPage","getBookingDetails","getUserBooking","params","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ariant","numberplate","default","MyProfilePage","userData","overview","AdminSignUpPage","successMessage","column","disabled","selected","span","offset","createCar","resetState","b64photo","handleFile","files","size","errMsg","reader","FileReader","readAsDataURL","onload","result","inputValidation","disableSubmit","newCar","createNewCar","successMsg","err","locationList","concat","option","index","File","label","accept","CreateLocation","initMap","gmapsLoaded","handleAutocomplete","newLoc","createNewLocation","gmapScriptEl","document","createElement","querySelector","insertAdjacentElement","onSelect","handleSelect","getInputProps","suggestions","getSuggestionItemProps","loading","suggestion","active","backgroundColor","cursor","description","ViewAllCustomersPage","customers","getAllCustomers","Table","striped","bordered","hover","customer","ViewCustomerPage","getUserFromId","ButtonGroup","ModifyCustomerDetailsPage","modifiedCustomer","modifyErrorMessage","checkEmailExistsPayload","checkEmailExists","exist","updateUser","fetchErrorMessage","ViewAllBookingsPage","getAllBookings","bookedtime","ViewBookingPage","getBooking","ViewCustomerBookingsPage","ViewAllCars","viewCarDetails","locationId","currentbooking","withRouter","ModifyCarDetails","carDetails","updateCar","scrollTop","scrollTo","top","behavior","ViewAllLocations","ViewLocation","errMessage","undefined","success","modifyLocationPage","updateLocation","App","exact","path","Overview","CreateCar","ModifyCarDetailsPage","ViewAllCarsPage","ModifyLocationPage","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","search","filter"],"mappings":"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","file":"static/js/main.311a745a.chunk.js","sourcesContent":["/* User service APIs */\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nconst api_url = process.env.REACT_APP_SERVER_URL + \"/api/users\" || \"http://localhost:3001/api/users\";\n\n\n// for user JWT storage\nexport const TOKEN_SESSION_ATTRIBUTE_NAME = 'token';\nexport const TOKEN_HEADER_LENGTH = 7;\n\nclass UserServiceApi {\n    getAllUsers() {\n        return axios.get(api_url);\n    }\n\n    getAllCustomers() {\n        return axios.get(api_url + '/customers', { headers: { authorization: this.getUserToken() } });\n    }\n\n    getUserFromId(id) {\n        return axios.get(`${api_url}/${id}`, { headers: { authorization: this.getUserToken() } });\n    }\n\n    checkEmailExists(email) {\n        return axios.post(`${api_url}/email`, email);\n    }\n\n    createNewUser(newUser) {\n        return axios.post(api_url, newUser);\n    }\n\n    loginUser(creds) {\n        console.log(api_url);\n        return axios.post(`${api_url}/login`, creds);\n    }\n\n    updateUser(user) {\n        return axios.patch(`${api_url}/${user._id}`, user);\n    }\n\n    registerSuccessfulLoginForJwt(token) {\n        localStorage.setItem(TOKEN_SESSION_ATTRIBUTE_NAME, token);\n        this.setupAxiosInterceptors(token);\n    }\n\n    getLoggedInUserID() {\n        let token = localStorage.getItem(TOKEN_SESSION_ATTRIBUTE_NAME);\n        if (token === null) return '';\n        return jwt_decode(token.slice(TOKEN_HEADER_LENGTH)).id;\n    }\n\n    getLoggedInUserDetails() {\n        let token = localStorage.getItem(TOKEN_SESSION_ATTRIBUTE_NAME);\n        if (token === null) return '';\n        return jwt_decode(token.slice(TOKEN_HEADER_LENGTH));\n    }\n\n    getUserToken() {\n        let token = localStorage.getItem(TOKEN_SESSION_ATTRIBUTE_NAME);\n        if (token === null) return '';\n        return token.slice(TOKEN_HEADER_LENGTH);\n    }\n\n    setupAxiosInterceptors(token) {\n        axios.interceptors.request.use(\n            (config) => {\n                if (this.isUserLoggedIn()) {\n                    config.headers.authorization = token;\n                }\n                return config;\n            }\n        )\n    }\n\n    isUserLoggedIn() {\n        let user = localStorage.getItem(TOKEN_SESSION_ATTRIBUTE_NAME);\n        if (user === null) {\n            return false;\n        }\n        return true;\n    }\n\n    isUserStaff() {\n        let user = this.getLoggedInUserDetails();\n        if (user.usertype === \"admin\" || user.usertype === \"staff\") {\n            return true;\n        }\n        return false;\n    }\n\n    isUserAdmin() {\n        let user = this.getLoggedInUserDetails();\n        if (user.usertype === \"admin\") {\n            return true;\n        }\n        return false;\n    }\n\n    logout() {\n        localStorage.removeItem(TOKEN_SESSION_ATTRIBUTE_NAME);\n        window.location.href = `/`;\n    }\n}\n\nexport default new UserServiceApi();\n","/* Location service APIs */\nimport axios from 'axios';\nrequire('dotenv').config();\nconst api_url = process.env.REACT_APP_SERVER_URL + \"/api/locations\" || \"http://localhost:3001/api/locations\";\n\nclass LocationServiceApi {\n    getAllLocations() {\n        return axios.get(api_url);\n    }\n\n    getLocationFromId(id) {\n        return axios.get(`${api_url}/${id}`);\n    }\n\n    createNewLocation(newLocation) {\n        return axios.post(api_url, newLocation);\n    }\n\n    getGeocodeFromAddress(address) {\n        const url = \"https://maps.googleapis.com/maps/api/geocode/json?address=\";\n        const api_key = \"AIzaSyAIt4zpzH_STYDrjE5_9jg_F1Hc_sOphkY\";\n        const formatted_address = address.replace(/ /g, \"+\");\n        const key_input = \"&key=\"\n        // create new axios instance without auth token for third party API\n        const axiosThirdParty = axios.create();\n        return axiosThirdParty.get(`${url + formatted_address + key_input + api_key}`);\n    }\n\n    updateLocation(location) {\n        return axios.patch(api_url + `/${location._id}`, location);\n    }\n}\n\nexport default new LocationServiceApi();\n","/* header component */\nimport React, { Component } from 'react';\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\nimport UserServiceApi from '../api/UserServiceApi';\n\nclass Header extends Component {\n\n    state = {\n       user: {}\n    };\n\n    componentDidMount() {\n        if (UserServiceApi.isUserLoggedIn()) {\n            const user = UserServiceApi.getLoggedInUserDetails();\n            console.log(user);\n            this.setState({\n                user: user\n            });\n        }\n    }\n\n\n    render() {\n        const isUserLoggedIn = UserServiceApi.isUserLoggedIn();\n        const isUserStaff = UserServiceApi.isUserStaff();\n\n        return (\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n                <Navbar.Brand href=\"/\">Uber Bus</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        {isUserLoggedIn &&\n                            <>\n                                {!isUserStaff && <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>}\n                                {!isUserStaff && <Nav.Link href=\"/mybookings\">Bookings</Nav.Link>}\n                                {isUserStaff && <Nav.Link href=\"/staff\">Staff Dashboard</Nav.Link>}\n                            </>\n                        }\n                        <Nav.Link href=\"/locations\">Locations</Nav.Link>\n                    </Nav>\n                    <Nav>\n                        {isUserLoggedIn &&\n                            <>\n                                <Nav.Link href=\"/myprofile\">Welcome, {this.state.user.firstname} {this.state.user.lastname}</Nav.Link>\n                                <Nav.Link onClick={UserServiceApi.logout}>Logout</Nav.Link>\n                            </>\n                        }\n                    </Nav>\n\n                    <Nav>\n                        {!isUserLoggedIn &&\n                            <>\n                                <Nav.Link href=\"/login\">Login</Nav.Link>\n                                <Nav.Link href=\"/signup\">Sign up</Nav.Link>\n                            </>\n                        }\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nexport default Header;\n","/* footer component */\nimport React, { Component } from 'react';\nimport '../styles/footer.css';\n\nexport default class footer extends Component {\n    render() {\n        return (\n            <div className=\"footer bg-dark\">\n                <p className=\"text-center\"> © 2021 Uber Bus Technologies Inc.</p>\n            </div>\n        )\n    }\n}\n","/* landing page component */\nimport React, { Component } from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport '../styles/landing.css';\nimport UserServiceApi from '../api/UserServiceApi';\n\nclass LandingPage extends Component {\n    render() {\n        const isUserLoggedIn = UserServiceApi.isUserLoggedIn();\n        const isUserStaff = UserServiceApi.isUserStaff();\n        return (\n            <>\n                {(isUserLoggedIn && !isUserStaff) &&\n                    <div className=\"landing-grid landing-grid-dashboard\">\n                        <Card className=\"landing-card\">\n                            <Card.Body>\n                                <Card.Title><h1>No mask. No ride.</h1></Card.Title>\n                                <br/>\n                                <Card.Subtitle className=\"mb-2 text-muted\">Your safety drives us</Card.Subtitle>\n                                <br/>\n                                <Card.Text className=\"text-justify\">\n                                    Whether you’re in the back seat or behind the wheel, your safety is essential. \n                                    We are committed to doing our part, and technology is at the heart of our approach. \n                                    We partner with safety advocates and develop new technologies and systems to help \n                                    improve safety and help make it easier for everyone to get around.\n                                </Card.Text>\n                                <Link className=\"no-text-decoration\" to=\"/dashboard\">\n                                    <Button variant=\"warning\" className=\"btn btn-lg btn-block\">Dashboard</Button>\n                                </Link>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                }\n                {(isUserLoggedIn && isUserStaff) &&\n                    <div className=\"landing-grid landing-grid-system\">\n                        <Card className=\"landing-card\">\n                            <Card.Body>\n                                <Card.Title><h1>Rides and beyond</h1></Card.Title>\n                                <br/>\n                                <Card.Subtitle className=\"mb-2 text-muted\">We ignite opportunity by setting the world in motion</Card.Subtitle>\n                                <br/>\n                                <Card.Text className=\"text-justify\">\n                                    Good things happen when people can move, whether across town or toward their dreams. \n                                    Opportunities appear, open up, become reality. What started as a way to tap a button to get a ride \n                                    has led to billions of moments of human connection as \n                                    people around the world go all kinds of places in all kinds of ways with the help of our technology.\n                                </Card.Text>\n                                \n                                <Link className=\"no-text-decoration\" to=\"/staff\">\n                                    <Button variant=\"warning\" className=\"btn btn-lg btn-block\">Manage System</Button>\n                                </Link>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                }\n                {!isUserLoggedIn &&\n                    <div className=\"landing-grid landing-grid-signup\">\n                        <Card className=\"landing-card\">\n                            <Card.Body>\n                                <Card.Title><h1>Rides and beyond</h1></Card.Title>\n                                <br/>\n                                <Card.Subtitle className=\"mb-2 text-muted\">We ignite opportunity by setting the world in motion</Card.Subtitle>\n                                <br/>\n                                <Card.Text className=\"text-justify\">\n                                    Good things happen when people can move, whether across town or toward their dreams. \n                                    Opportunities appear, open up, become reality. What started as a way to tap a button to get a ride \n                                    has led to billions of moments of human connection as \n                                    people around the world go all kinds of places in all kinds of ways with the help of our technology.\n                                </Card.Text>\n                                <Link className=\"no-text-decoration\" to=\"/signup\">\n                                    <Button variant=\"info\" className=\"btn btn-lg btn-block\">Sign Up</Button>\n                                </Link>\n                               \n                            </Card.Body>\n                        </Card>\n                        \n                    </div>\n                }\n            </>\n        )\n    }\n}\n\nexport default LandingPage;\n","/* Signup page */\nimport React, { Component } from 'react';\nimport { Form, Button, Alert, Card } from 'react-bootstrap';\nimport UserServiceApi from '../api/UserServiceApi.js';\n\nclass SignUpPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstname: '',\n            lastname: '',\n            email: '',\n            password: '',\n            errorMessage: ''\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    /* Set react state for each input when user inputs something on signup form */\n    handleChange = event => {\n        this.setState({ errorMessage: '', [event.target.name]: event.target.value });\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        /* create new user object */\n        let newUser = {\n            firstname: this.state.firstname.trim(),\n            lastname: this.state.lastname.trim(),\n            email: this.state.email,\n            password: this.state.password,\n            usertype: \"customer\"\n        };\n        // input validation\n        if (this.state.firstname === '') {\n            return this.setState({ errorMessage: \"First name can't be empty!\" });\n        }\n        if (this.state.lastname === '') {\n            return this.setState({ errorMessage: \"Last name can't be empty!\" });\n        }\n        const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!emailRegex.test(String(this.state.email).toLowerCase())) {\n            return this.setState({ errorMessage: \"Please enter a valid email!\" });\n        }\n        // publish new user to backend\n        UserServiceApi.createNewUser(newUser).then(() => {\n            // login user on success\n            UserServiceApi.loginUser({ email: this.state.email, password: this.state.password }).then(res => {\n                UserServiceApi.registerSuccessfulLoginForJwt(res.data.token);\n                window.location.href = `/`;\n            })\n        }).catch((error) => {\n            this.setState({ errorMessage: error.response.data.message });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container-grid\">\n                <div>\n                    <Alert className=\"alert text-center\" show={this.state.errorMessage} variant=\"danger\">\n                        {this.state.errorMessage}\n                    </Alert>\n                </div>\n                <Card className=\"card-block\">\n                    <Card.Img variant=\"top\" style={{margin: '1vh auto', width:'60%'}} src={`${process.env.PUBLIC_URL}/signup.jpg`} />\n                    <Card.Body>\n                        <Form onSubmit={this.handleSubmit} id=\"signup_form\" >\n                        <Form.Group controlId=\"formHorizontalFirstName\">\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control name=\"firstname\" type=\"firstname\" className=\"form-control\" placeholder=\"Enter first name\" onChange={this.handleChange} required />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formHorizontalLastName\">\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control name=\"lastname\" type=\"lastname\" className=\"form-control\" placeholder=\"Enter last name\" onChange={this.handleChange} required />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formHorizontalEmail\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control name=\"email\" type=\"email\" className=\"form-control\" placeholder=\"Enter email\" onChange={this.handleChange} required />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formHorizontalPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control name=\"password\" type=\"password\" className=\"form-control\" placeholder=\"Enter password\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" title=\"Must contain: at least one number, one uppercase, lowercase letter, and at least 8 or more characters\"  onChange={this.handleChange} required />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Button className=\"btn btn-dark btn-lg btn-block\" type=\"submit\">Sign up</Button>\n                            <p className=\"forgot-password text-right\">Already registered <a href=\"/login\">log in?</a></p>\n                        </Form.Group>\n                    </Form>\n                    </Card.Body>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default SignUpPage;\n","/* login page */\nimport React, { Component } from 'react';\nimport { Form, Button, Alert, Card } from 'react-bootstrap';\nimport UserServiceApi from '../api/UserServiceApi.js';\n\nclass LoginPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: 'sajal.sood@gmail.com',\n            password: 'Admin@123',\n            errorMessage: ''\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    /* Set react state for each input when user inputs something on login form */\n    handleChange = event => {\n        this.setState({ errorMessage: '', [event.target.name]: event.target.value });\n    }\n\n    handleSubmit = event => {\n        // login button handler\n        event.preventDefault();\n        let creds = {\n            email: this.state.email,\n            password: this.state.password\n        };\n        // email validation\n        const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!emailRegex.test(String(this.state.email).toLowerCase())) {\n            return this.setState({ errorMessage: \"Please enter a valid email!\" });\n        }\n        // publish login details to backend\n        UserServiceApi.loginUser(creds).then(res => {\n            UserServiceApi.registerSuccessfulLoginForJwt(res.data.token);\n            window.location.href = `/`;\n        }).catch((error) => {\n            this.setState({ errorMessage: error.response.data.message });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container-grid\">\n                <div>\n                    <Alert className=\"alert text-center\" show={this.state.errorMessage} variant=\"danger\">\n                        {this.state.errorMessage}\n                    </Alert>\n                </div>\n\n                <Card className=\"card-block\">\n                <Card.Img variant=\"top\" style={{margin: '0 auto', width:'90%'}} src={`${process.env.PUBLIC_URL}/login.png`} />\n                    <Card.Body>\n                       \n                        <Form onSubmit={this.handleSubmit} id=\"login_form\">\n                            <Form.Group controlId=\"formHorizontalEmail\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control name=\"email\" value=\"sajal.sood@gmail.com\"  placeholder=\"Enter email\" className=\"form-control\" type=\"email\"  onChange={this.handleChange} required />\n                            </Form.Group>\n                            <Form.Group controlId=\"formHorizontalPassword\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control name=\"password\" value=\"Admin@123\" placeholder=\"Enter password\" className=\"form-control\" type=\"password\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" title=\"Must contain: at least one number, one uppercase, lowercase letter, and at least 8 or more characters\" onChange={this.handleChange} required />\n                            </Form.Group>\n                            <Form.Group>\n                                <Button className=\"btn btn-dark btn-lg btn-block\" type=\"submit\">Login</Button>\n                            </Form.Group>\n                        </Form>\n                    </Card.Body>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default LoginPage;\n","/* Location/Map page */\nimport React from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport LocationServiceApi from '../api/LocationServiceApi.js';\nimport \"../styles/map.css\";\n\nexport class MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locations: [],\n      activeMarker: {},\n      showingInfoWindow: false,\n      selectedPlace: {}\n    };\n  }\n\n  componentDidMount() {\n    // obtain all locations\n    let location_array = this.state.locations;\n    // Get all locations from backend\n    LocationServiceApi.getAllLocations().then(res => {\n      const data = res.data;\n      // Iterate through each address and get latitude and longitude\n      data.forEach(element => {\n        LocationServiceApi.getGeocodeFromAddress(element.address)\n          .then(res => {\n            // Create object with address, latitude and longitude\n            let object = {\n              id: element._id,\n              address: element.address,\n              name: element.name,\n              lat: res.data.results[0].geometry.location.lat,\n              lng: res.data.results[0].geometry.location.lng,\n              cars: element.cars\n            };\n            // Push address, lat, long as object to react state array\n            location_array.push(object);\n            this.setState({\n              locations: location_array\n            });\n          });\n      });\n    });\n  }\n\n  mapOnMarkerClick = (props, marker) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n    });\n\n  mapOnMapClick = () =>\n    this.setState({\n      showingInfoWindow: false,\n      selectedPlace: {},\n      activeMarker: {}\n    });\n\n  render() {\n    return (\n      <div style={{ height: \"100vh\" }}>\n        <Map google={this.props.google}\n          initialCenter={{\n            lat: 42.361145,\n            lng: -71.057083\n          }}\n          zoom={13}\n          onClick={this.mapOnMapClick}>\n\n          {this.state.locations.map(marker => {\n            return (\n              <Marker\n                id={marker.id}\n                name={marker.name}\n                address={marker.address}\n                onClick={this.mapOnMarkerClick}\n                position={{ lat: marker.lat, lng: marker.lng }}\n              />)\n          })}\n\n          <InfoWindow\n            onClose={this.onInfoWindowClose}\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}>\n            <div id=\"info-window\">\n              <h2>{this.state.selectedPlace.name}</h2>\n              <p>{this.state.selectedPlace.address}</p>\n              <a href={\"/locations/\" + this.state.selectedPlace.id}>Check out this location</a>\n            </div>\n          </InfoWindow>\n        </Map>\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyAIt4zpzH_STYDrjE5_9jg_F1Hc_sOphkY\"\n})(MapContainer);\n","/* authenticated router */\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport UserServiceApi from './api/UserServiceApi';\n\n\nclass AuthenticatedRoute extends Component {\n    //This class authenticates and verifies the user, otherwise redirects the web to the login page.\n    render() {\n        if (UserServiceApi.isUserLoggedIn()) {\n            return <Route {...this.props} />\n        } else {\n            return <Redirect to=\"/\" />\n        }\n    }\n}\n\nexport default AuthenticatedRoute;\n","/* Staff dashboard page/wrapper */\nimport React, { Component } from 'react';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport UserServiceApi from '../../api/UserServiceApi';\nimport '../../styles/staffDashboard.css';\n\n// define styles\nconst FunctionSelectedStyle = {\n    borderBottom: \"4px solid #009bde\",\n    color: \"white\"\n};\nconst FunctionNotSelectedStyle = {\n    color: \"white\"\n};\n\nexport default class StaffDashboard extends Component {\n    render() {\n        const currentLocation = window.location.pathname;\n        const isAdmin = UserServiceApi.isUserAdmin;\n        return (\n            <Container style={{ margin: \"0\", padding: \"0\", maxWidth: \"100%\" }}>\n                <Row style={{ margin: \"0\" }}>\n                    <Col className=\"sidenav\" md={2}>\n                        <h3>{isAdmin ? \"Admin\" : \"Staff\"} Functions</h3>\n                        <p><a href=\"/staff\" style={(currentLocation === \"/staff\") ? FunctionSelectedStyle : FunctionNotSelectedStyle}>Overview</a></p>\n                        {\n                            isAdmin &&\n                            <>\n                                <p><a href=\"/admin/signup\" style={(currentLocation === \"/admin/signup\") ? FunctionSelectedStyle : FunctionNotSelectedStyle}>Create Account</a></p>\n                                <p><a href=\"/admin/addcars\" style={(currentLocation === \"/admin/addcars\") ? FunctionSelectedStyle : FunctionNotSelectedStyle}>Create Bus</a></p>\n                                <p><a href=\"/admin/addlocation\" style={(currentLocation === \"/admin/addlocation\") ? FunctionSelectedStyle : FunctionNotSelectedStyle}>Add Location</a></p>\n                                <p><a href=\"/admin/view/customers\" style={(currentLocation === \"/admin/customers\") ? FunctionSelectedStyle : FunctionNotSelectedStyle}>View All Customers</a></p>\n                                <p><a href=\"/admin/view/bookings\" style={(currentLocation === \"/admin/view/bookings\") ? FunctionSelectedStyle : FunctionNotSelectedStyle}>View All Bookings</a></p>\n                                <p><a href=\"/admin/view/cars\" style={(currentLocation === \"/admin/view/cars\") ? FunctionSelectedStyle : FunctionNotSelectedStyle}>View All Buses</a></p>\n                                <p><a href=\"/admin/view/location\" style={(currentLocation === \"/admin/view/location\") ? FunctionSelectedStyle : FunctionNotSelectedStyle}>View All Locations</a></p>\n                            </>\n                        }\n                    </Col>\n                    <Col className=\"main\" md={10} style={{ paddingTop: '5vh' }}>\n                        {this.props.children}\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n","/* Staff router */\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport UserServiceApi from './api/UserServiceApi';\nimport StaffDashboard from './components/staffComponents/staffDashboard';\n\nconst StaffRoute = ({ component: Component, ...rest }) => {\n    //This class authenticates and verifies the staff member, otherwise redirects the web to the login page.\n    if (UserServiceApi.isUserLoggedIn() && (UserServiceApi.isUserStaff() || UserServiceApi.isUserAdmin())) {\n        return (\n            <Route {...rest} render={matchProps => (\n                <StaffDashboard>\n                    <Component {...matchProps} />\n                </StaffDashboard>\n            )} />\n        );\n    } else {\n        return <Redirect to=\"/\" />\n    }\n}\n\nexport default StaffRoute;\n","/* Location show page */\nimport React, { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport { Jumbotron, Button } from 'react-bootstrap';\nimport { Container, Row, Col } from 'react-bootstrap'\nimport LocationServiceApi from '../api/LocationServiceApi.js';\nimport CarServiceApi from '../api/CarServiceApi.js';\nimport \"../styles/map.css\";\n\nclass LocationShowPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            location: {},\n            cars: [],\n            activeMarker: {},\n            showingInfoWindow: false,\n            selectedPlace: {},\n            isLoading: false\n        };\n    }\n\n    componentDidMount() {\n        // obtain location id from url parameters\n        let url = this.props.match.url;\n        let location_id = url.split(\"/\")[2];\n        // Get location from id\n        LocationServiceApi.getLocationFromId(location_id).then(res => {\n            LocationServiceApi.getGeocodeFromAddress(res.data.address)\n                .then(newRes => {\n                    // Create object with address, latitude and longitude\n                    let locationObject = {\n                        id: res.data._id,\n                        address: res.data.address,\n                        name: res.data.name,\n                        lat: newRes.data.results[0].geometry.location.lat,\n                        lng: newRes.data.results[0].geometry.location.lng,\n                        cars: res.data.cars\n                    };\n                    // set new location object to react state array\n                    this.setState({\n                        location: locationObject,\n                        isLoading: true\n                    });\n                });\n            res.data.cars.forEach(carId => {\n                CarServiceApi.getCar(carId).then(res => {\n                    this.state.cars.push(res.data.car);\n                    this.setState({\n                        cars: this.state.cars\n                    });\n                });\n            });\n        });\n    }\n\n    mapOnMarkerClick = (props, marker) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true,\n        });\n\n    mapOnMapClick = () =>\n        this.setState({\n            showingInfoWindow: false,\n            selectedPlace: {},\n            activeMarker: {}\n        });\n\n    render() {\n        return (\n            <Container style={{ 'padding': '1vh' }}>\n                <Jumbotron>\n                    <h2>Welcome to one of our locations</h2>\n                    <Button href=\"/locations\" variant=\"primary\">Back to the map</Button>\n                </Jumbotron>\n                {this.state.isLoading && <div id=\"garage-map\" style={{ height: '400px' }}>\n                    <Map google={this.props.google}\n                        initialCenter={{\n                            lat: this.state.location.lat,\n                            lng: this.state.location.lng\n                        }}\n                        style={{ height: '400px', width: '400px' }}\n                        zoom={14}\n                        onClick={this.mapOnMapClick}>\n\n                        <Marker\n                            id={this.state.location.id}\n                            name={this.state.location.name}\n                            address={this.state.location.address}\n                            onClick={this.mapOnMarkerClick}\n                            position={{ lat: this.state.location.lat, lng: this.state.location.lng }}\n                        />\n\n                        <InfoWindow\n                            onClose={this.onInfoWindowClose}\n                            marker={this.state.activeMarker}\n                            visible={this.state.showingInfoWindow}>\n                            <div id=\"info-window\">\n                                <h2>{this.state.selectedPlace.name}</h2>\n                                <p>{this.state.selectedPlace.address}</p>\n                                <a href={\"/locations/\" + this.state.selectedPlace.id}>Check out this location</a>\n                            </div>\n                        </InfoWindow>\n                    </Map>\n                </div>}\n                <h3>{this.state.location.name}</h3>\n                <strong>Address: </strong>\n                <p>{this.state.location.address}</p>\n                <strong>Number of cars: </strong>\n                <p>{this.state.cars.length}</p>\n                <strong>Cars at this location:</strong>\n                <Container fluid id=\"car-show\">\n                    <Row>\n                        {this.state.cars.map(car =>\n                            <CarDescriptionComponent car={car} />\n                        )}\n                    </Row>\n                </Container>\n            </Container>\n        )\n    }\n}\n\nfunction CarDescriptionComponent(props) {\n    // car description component card\n    const { car } = props\n    return (\n        <Col sm={4}>\n            <div className=\"cars-div-white\" style={{ 'border': 'solid black 2px' }}>\n                <img src={car.image} alt=\"car\" width=\"100\" />\n                <h2 style={{ marginTop: '1vh' }}>{car.make}</h2>\n                <p>{car.fueltype}, {car.bodytype}, {car.seats} seaters, {car.colour}</p>\n                <h5>${car.costperhour} per hour</h5>\n            </div>\n        </Col>\n    );\n}\n\nexport default GoogleApiWrapper({\n    apiKey: \"AIzaSyAIt4zpzH_STYDrjE5_9jg_F1Hc_sOphkY\"\n})(LocationShowPage);\n","/* App constants are defined below */\nexport const CAR_COLOURS = [\"Black\", \"Yellow\", \"Blue\", \"White\", \"Green\", \"Red\", \"Orange\", \"Purple\"];\nexport const CAR_BODY_TYPES = [\"Sedan\", \"MPV\", \"Sports\", \"Hatchback\", \"Ute\"];\nexport const CAR_SEATS = [2, 4, 5, 6, 7];\nexport const CAR_FUEL_TYPES = [\"Petrol\", \"Diesel\"];\nexport const CAR_DESTINATION = [\"BOSTON\", \"San Jose\"];\nexport const FILE_UPLOAD_LIMIT = 4000000 // 4mb\n","/* Booking service APIs */\nimport axios from 'axios';\nimport UserServiceApi from './UserServiceApi';\nrequire('dotenv').config();\nconst api_url = process.env.REACT_APP_SERVER_URL + \"/api/bookings\" || \"http://localhost:3001/api/bookings\";\n\nclass BookingServiceApi {\n    getNextBooking() {\n        return axios.get(`${api_url}/customers/next`, { headers: { authorization: UserServiceApi.getUserToken() } });\n    }\n\n    createBooking(booking) {\n        return axios.post(api_url, booking);\n    }\n\n    getUserBookings(userId) {\n        return axios.get(`${api_url}/customers/all/${userId}`, { headers: { authorization: UserServiceApi.getUserToken() } });\n    }\n\n    getUserBooking(bookingId) {\n        return axios.get(`${api_url}/customers/${bookingId}`, { headers: { authorization: UserServiceApi.getUserToken() } });\n    }\n\n    modifyBooking(booking) {\n        return axios.patch(`${api_url}/customers/${booking.id}`, booking);\n    }\n\n    getAllBookings() {\n        return axios.get(`${api_url}/customers/all`, { headers: { authorization: UserServiceApi.getUserToken() } });\n    }\n\n    getBooking(bookingId) {\n        return axios.get(`${api_url}/${bookingId}`, { headers: { authorization: UserServiceApi.getUserToken() } });\n    }\n}\n\nexport default new BookingServiceApi();\n","/* Bookings confirm details page */\nimport React, { Component } from 'react';\nimport { Form, Col, Button, Alert, Container, ListGroup } from 'react-bootstrap';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport BookingServiceApi from '../../api/BookingServiceApi';\nimport UserServiceApi from '../../api/UserServiceApi';\nimport LocationServiceApi from '../../api/LocationServiceApi';\nimport moment from 'moment'\n\n\nclass BookingConfirmDetailsPopUp extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            errorMessage: '',\n            location: {},\n            destination: '',\n            destinations: [],\n            activeMarker: {},\n            showingInfoWindow: false,\n            selectedPlace: {},\n            isLoading: false,\n        };\n        this.handleConfirmButton = this.handleConfirmButton.bind(this);\n        this.handleCancelButton = this.handleCancelButton.bind(this);\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleConfirmButton = event => {\n        // prevent browser from refreshing on click\n        event.preventDefault();\n        // generate new booking object\n\n        console.log(this.state.destination);\n\n        let newBooking = {\n            pickupTime: this.props.pickupTime,\n            returnTime: this.props.returnTime,\n            user: UserServiceApi.getLoggedInUserID(),\n            car: this.props.car._id,\n            destination: this.state.destination,\n            location: this.props.car.location,\n        };\n\n        console.log(newBooking);\n\n        // publish create booking request to backend\n        BookingServiceApi.createBooking(newBooking)\n            .then(res => {\n                // redirect to booking details page on success\n                window.location.href = `/mybookings/${res.data.response.booking._id}`;\n            })\n            .catch((error) => {\n                // display error message on failure\n                this.setState({ errorMessage: error.response.data.message });\n            })\n    };\n\n    handleCancelButton = event => {\n        // prevent browser from refreshing on click\n        event.preventDefault();\n        this.props.handleClose();\n    };\n\n    componentDidMount() {\n        const { car } = this.props;\n\n        // obtain location from id\n        LocationServiceApi.getLocationFromId(car.location)\n            .then(res => {\n                LocationServiceApi.getGeocodeFromAddress(res.data.address)\n                    .then(newRes => {\n                        // Create object with address, latitude and longitude\n                        let locationObject = {\n                            id: res.data._id,\n                            address: res.data.address,\n                            name: res.data.name,\n                            lat: newRes.data.results[0].geometry.location.lat,\n                            lng: newRes.data.results[0].geometry.location.lng,\n                            cars: res.data.cars\n                        }\n                        // set new location object to react state array\n                        this.setState({\n                            location: locationObject,\n                            isLoading: true\n                        })\n                    });\n            });\n\n        // obtain all destinations\n        let destinationArray = this.state.destinations;\n        let defaultDestination = this.state.destination;\n        LocationServiceApi.getAllLocations().then(res => {\n            res.data.forEach(location => {\n                let locationObject = {\n                    id: location._id,\n                    address: location.address,\n                    name: location.name\n                }\n                destinationArray.push(locationObject);\n            });\n            defaultDestination = destinationArray[0].id;\n            this.setState({ destination: defaultDestination });\n        });\n    }\n\n    mapOnMarkerClick = (props, marker) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true,\n        });\n\n    mapOnMapClick = () =>\n        this.setState({\n            showingInfoWindow: false,\n            selectedPlace: {},\n            activeMarker: {}\n        });\n\n    calculateBookingCost() {\n        // cost calculation based on pickup time and return time difference\n        const pickupTimeHours = new Date(this.props.pickupTime);\n        const returnTimeHours = new Date(this.props.returnTime);\n        const timeDeltaHours = new Date(returnTimeHours - pickupTimeHours).getTime() / 3600;\n\n        const cost = parseInt(this.props.car.costperhour) * (timeDeltaHours / 1000);\n        return cost.toFixed(2);\n    }\n\n    render() {\n        const { locations, car, pickupTime, returnTime } = this.props;\n        const cost = this.calculateBookingCost();\n\n        return (\n        <div className=\"container\">\n            {this.state.errorMessage && <Alert variant=\"danger\">\n                <Alert.Heading>Booking failed!</Alert.Heading>\n                <p>\n                    {this.state.errorMessage}\n                </p>\n            </Alert>}\n\n            <ListGroup>\n                <ListGroup.Item><b>Pickup - </b> {moment(pickupTime).format('MMMM Do YYYY, h:mm a')} </ListGroup.Item>\n                <ListGroup.Item><b>Return - </b> {moment(returnTime).format('MMMM Do YYYY, h:mm a')}</ListGroup.Item>\n                <ListGroup.Item><b>Price - </b>${cost}/hr</ListGroup.Item>\n                <ListGroup.Item><b>Fuel Type - </b>{car.fueltype}</ListGroup.Item>\n                <ListGroup.Item><b>Location - </b> {locations.map(location =>\n                    <>\n                        {location.id === car.location &&\n                            <>\n                                {location.name}\n                            </>\n                        }\n                    </>\n                )}</ListGroup.Item>\n                \n                <ListGroup.Item><b>Address - </b> {locations.map(location =>\n                    <>\n                        {location.id === car.location &&\n                            <>\n                                {location.address}\n                            </>\n                        }\n                    </>\n                )}</ListGroup.Item>\n                <ListGroup.Item>\n                    <div className=\"filter-confirm\">\n                        <div>\n                            <Button className=\"btn btn-block\"  variant=\"success\" onClick={this.handleConfirmButton}>Confirm</Button>\n                        </div>\n                        <div>\n                            <Button className=\"btn btn-block\"  variant=\"danger\" onClick={this.handleCancelButton}>Cancel</Button>\n                        </div>\n                    </div>\n                </ListGroup.Item>\n            </ListGroup>\n        </div>);\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: \"AIzaSyAIt4zpzH_STYDrjE5_9jg_F1Hc_sOphkY\"\n})(BookingConfirmDetailsPopUp);\n","/* Filter cars page */\nimport React, { Component } from 'react';\nimport { Form, Card, Button, Accordion, Alert, Table, Modal, ListGroup } from 'react-bootstrap';\nimport CarServiceApi from '../../api/CarServiceApi';\nimport { CAR_COLOURS, CAR_BODY_TYPES, CAR_SEATS, CAR_FUEL_TYPES } from '../../Constants.js';\nimport LocationServiceApi from '../../api/LocationServiceApi';\nimport BookingConfirmDetailsPopUp from './bookingConfirmDetails';\nimport UserServiceApi from '../../api/UserServiceApi';\nimport BookingServiceApi from '../../api/BookingServiceApi';\nimport moment from 'moment'\n\nclass FilterCarsPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pickupTime: '',\n            returnTime: '',\n            availableCars: [],\n            make: '',\n            seats: 'Any',\n            fueltype: 'Any',\n            colour: 'Any',\n            location: 'Any',\n            bodytype: 'Any',\n            locations: [],\n            errorMessage: '',\n            popUp: false,\n            selectedCar: ''\n        };\n        this.handleSubmitFilter = this.handleSubmitFilter.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.togglePopUp = this.togglePopUp.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleClose = event => {\n        this.setState({popUp : false});\n    }\n\n    handleSubmitFilter = event => {\n        event.preventDefault();\n        // filter available cars based on attributes specified\n        let newFilter = {\n            pickupTime: this.state.pickupTime,\n            returnTime: this.state.returnTime,\n            availableCars: this.state.availableCars,\n            make: this.state.make,\n            seats: this.state.seats,\n            fueltype: this.state.fueltype,\n            colour: this.state.colour,\n            location: this.state.location,\n            bodytype: this.state.bodytype\n        };\n        // publish filter cars request to backend\n        CarServiceApi.filterCars(newFilter).then(res => {\n            \n            this.setState({\n                availableCars: res.data.availableCars,\n                errorMessage: ''\n            });\n        }).catch((error) => {\n            this.setState({ errorMessage: error.response.data.message, availableCars: [] });\n        });\n    }\n\n    togglePopUp(car) {\n        if (this.state.popUp)\n            car = null;\n        this.setState({\n            popUp: !this.state.popUp,\n            selectedCar: car\n        });\n\n    }\n\n    componentDidMount() {\n        const { availableCars, pickupTime, returnTime } = this.props;\n\n        console.log(availableCars);\n\n        // redirect to dashboard if props don't exist\n        if (availableCars.length === 0 || pickupTime === '' || returnTime === '') {\n            this.props.history.push('/dashboard');\n        }\n\n        this.setState({\n            availableCars: availableCars,\n            pickupTime: pickupTime,\n            returnTime: returnTime\n        });\n\n        // obtain all locations\n        let locationArray = this.state.locations;\n        LocationServiceApi.getAllLocations().then(res => {\n            res.data.forEach(location => {\n                let locationObject = {\n                    id: location._id,\n                    address: location.address,\n                    name: location.name\n                }\n                locationArray.push(locationObject);\n                this.setState({ locations: locationArray });\n            });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"filter-grid\">\n                <div></div>\n                <div className=\"filter-block\">\n                    <div>\n                        {this.state.errorMessage && <Alert variant=\"danger\">\n                            <Alert.Heading>Error filtering cars!</Alert.Heading>\n                            <p>\n                                {this.state.errorMessage}\n                            </p>\n                        </Alert>}\n                        <Form onSubmit={this.handleSubmitFilter} id=\"filter_form\" >\n                            <Form.Group controlId=\"formHorizontalFirstName\">\n                                <Form.Label>Make</Form.Label>\n                                <Form.Control name=\"make\" type=\"text\" placeholder=\"Make\" onChange={this.handleChange} />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                <Form.Label>Seats</Form.Label>\n                                <Form.Control name=\"seats\" as=\"select\" onChange={this.handleChange}>\n                                    <option>Any</option>\n                                    {CAR_SEATS.map(carSeat =>\n                                        <>\n                                            <option>{carSeat}</option>\n                                        </>\n                                    )}\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                                <Form.Label>Fuel Type</Form.Label>\n                                <Form.Control name=\"fueltype\" as=\"select\" onChange={this.handleChange}>\n                                    <option>Any</option>\n                                    {CAR_FUEL_TYPES.map(carFuel =>\n                                        <>\n                                            <option>{carFuel}</option>\n                                        </>\n                                    )}\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"exampleForm.ControlSelect3\">\n                                <Form.Label>Body Type</Form.Label>\n                                <Form.Control name=\"bodytype\" as=\"select\" onChange={this.handleChange}>\n                                    <option>Any</option>\n                                    {CAR_BODY_TYPES.map(carBodyType =>\n                                        <>\n                                            <option>{carBodyType}</option>\n                                        </>\n                                    )}\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"exampleForm.ControlSelect4\">\n                                <Form.Label>Colour</Form.Label>\n                                <Form.Control name=\"colour\" as=\"select\" onChange={this.handleChange}>\n                                    <option>Any</option>\n                                    {CAR_COLOURS.map(carColour =>\n                                        <>\n                                            <option>{carColour}</option>\n                                        </>\n                                    )}\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"exampleForm.ControlSelect5\">\n                                <Form.Label>Location</Form.Label>\n                                <Form.Control name=\"location\" as=\"select\" onChange={this.handleChange}>\n                                    <option>Any</option>\n                                    {this.state.locations.map(location =>\n                                        <>\n                                            <option value={location.id}>{location.name + \" @ \" + location.address}</option>\n                                        </>\n                                    )}\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group>\n                                <Button variant=\"warning\" className=\"btn btn-lg btn-block\" type=\"submit\">Filter</Button>\n                            </Form.Group>\n                        </Form>\n                    </div>\n                    <div>\n                        <div className=\"text-center vert-center\">\n                            <h4><small>Available Buses from</small> {moment(this.state.pickupTime).format('MMMM Do YYYY, h:mm a')}<small> till </small>{moment(this.state.returnTime).format('MMMM Do YYYY, h:mm a')}</h4>\n                        </div>\n                        <Accordion>\n                            {\n                            this.state.availableCars.map((car, ind) =>\n                                <Card>\n                                    <Card.Header>\n                                        <Accordion.Toggle style={{textDecoration: 'none'}} as={Button} variant=\"link\" eventKey={++ind}>\n                                            {ind}. {car.make} -  {this.state.locations.map(location =>\n                                                <>\n                                                    {location.id === car.location &&\n                                                        <>\n                                                            {location.name}\n                                                        </>\n                                                    }\n                                                </>\n                                            )}\n                                        </Accordion.Toggle>\n                                    </Card.Header>\n                                    <Accordion.Collapse eventKey={ind}>\n                                        <Card.Body>\n                                        <ListGroup>\n                                            <ListGroup.Item>\n                                                <div className=\"filter-book\">\n                                                    <div>\n                                                        <b>Type - </b>{car.bodytype}\n                                                    </div>\n                                                    <div>\n                                                        <Button variant=\"success\" onClick={() => this.togglePopUp(car)}>Book</Button>\n                                                    </div>\n                                                </div>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item><b>Seats - </b>{car.seats}</ListGroup.Item>\n                                            <ListGroup.Item><b>Color - </b>{car.colour}</ListGroup.Item>\n                                            <ListGroup.Item><b>Price - </b>${car.costperhour}/hr</ListGroup.Item>\n                                            <ListGroup.Item><b>Fuel Type - </b>{car.fueltype}</ListGroup.Item>\n                                            <ListGroup.Item><b>Address - </b> {this.state.locations.map(location =>\n                                                <>\n                                                    {location.id === car.location &&\n                                                        <>\n                                                            {location.address}\n                                                        </>\n                                                    }\n                                                </>\n                                            )}</ListGroup.Item>\n                                        </ListGroup>\n                                   </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n                            )}\n                        </Accordion>\n                    </div>\n                    <div>\n\n                    <Modal\n                        show={this.state.popUp}\n                        onHide={this.handleClose}\n                        backdrop=\"static\"\n                        keyboard={false}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Confirm Booking</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <BookingConfirmDetailsPopUp locations={this.state.locations} car={this.state.selectedCar} pickupTime={this.state.pickupTime} returnTime={this.state.returnTime} handleClose={this.handleClose} />\n                        </Modal.Body>\n                    </Modal>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FilterCarsPage;\n","/* Booking dashboard */\nimport React, { Component } from 'react';\nimport { Form, ListGroup, Button, Alert, Card, Container } from 'react-bootstrap';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport CarServiceApi from '../../api/CarServiceApi';\nimport BookingServiceApi from '../../api/BookingServiceApi';\nimport LocationServiceApi from '../../api/LocationServiceApi';\n\nclass BookingDashboard extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            today_date : `${new Date().getFullYear()}-${`${new Date().getMonth() + 1}`.padStart(2, 0)}-${`${new Date().getDate()}`.padStart(2,0)}T${`${new Date().getHours()}`.padStart(2,0)}:${`${new Date().getMinutes()}`.padStart(2, 0)}`,\n            pickupTime: `${new Date().getFullYear()}-${`${new Date().getMonth() + 1}`.padStart(2, 0)}-${`${new Date().getDate()}`.padStart(2,0)}T${`${new Date().getHours()}`.padStart(2,0)}:${`${new Date().getMinutes()}`.padStart(2, 0)}`,\n            returnTime: `${new Date().getFullYear()}-${`${new Date().getMonth() + 1}`.padStart(2, 0)}-${`${new Date().getDate()}`.padStart(2,0)}T${`${new Date().getHours()}`.padStart(2,0)}:${`${new Date().getMinutes()}`.padStart(2, 0)}`,\n            errorMessage: '',\n            nextBooking: {},\n            nextBookingExists: false,\n            car: '',\n            location: '',\n            successHeader: '',\n            activeMarker: {},\n            showingInfoWindow: false,\n            selectedPlace: {},\n            isLoading: false\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange = event => {\n        this.setState({ errorMessage: '', [event.target.name]: event.target.value });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        // check for available cars and redirect\n        let newSearch = {\n            pickupTime: this.state.pickupTime,\n            returnTime: this.state.returnTime\n        };\n        // publish search all available cars request to backend\n        CarServiceApi.searchAvailableCars(newSearch).then(res => {\n            // passing available cars to filter car page\n            this.props.updateCars(res.data.availableCars, this.state.pickupTime, this.state.returnTime);\n            this.props.history.push('/filter');\n        }).catch((error) => {\n            // display error if there's any\n            this.setState({ errorMessage: error.response.data.message });\n        });\n    };\n\n    mapOnMarkerClick = (props, marker) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true,\n        });\n\n    mapOnMapClick = () =>\n        this.setState({\n            showingInfoWindow: false,\n            selectedPlace: {},\n            activeMarker: {}\n        });\n\n    componentDidMount() {\n\n        // obtain customer's upcoming booking  with required elements if any\n        BookingServiceApi.getNextBooking().then(res => {\n            if (Object.keys(res.data).length) {\n                // display upcoming booking and show pickup/return button when available\n                let currentTime = new Date();\n                currentTime.setMinutes(currentTime.getMinutes() - currentTime.getTimezoneOffset());\n                this.setState({\n                    nextBooking: res.data,\n                    nextBookingExists: true,\n                });\n                CarServiceApi.getCar(res.data.car)\n                    .then(res => {\n                        this.setState({\n                            car: res.data.car\n                        });\n                    });\n                LocationServiceApi.getLocationFromId(res.data.location)\n                    .then(res => {\n                        LocationServiceApi.getGeocodeFromAddress(res.data.address)\n                            .then(newRes => {\n                                // Create object with address, latitude and longitude\n                                let locationObject = {\n                                    id: res.data._id,\n                                    address: res.data.address,\n                                    name: res.data.name,\n                                    lat: newRes.data.results[0].geometry.location.lat,\n                                    lng: newRes.data.results[0].geometry.location.lng,\n                                    cars: res.data.cars\n                                };\n                                // set new location object to react state array\n                                this.setState({\n                                    location: locationObject,\n                                    isLoading: true\n                                });\n                            });\n                    });\n            }\n        }).catch((error) => {\n            this.setState({ errorMessage: error.response.data.message });\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"dashboard-grid\">\n                <div>\n                    <Alert style={{ width: '100%' }} className=\"alert text-center\" show={this.state.errorMessage} variant=\"danger\">\n                            {this.state.errorMessage}\n                    </Alert>\n                </div>\n                <div className=\"dashboard-block\">\n                    <Form onSubmit={this.handleSubmit} id=\"availability_form\">\n                        <h3>Request a ride now</h3><br/>\n                        <Form.Group controlId=\"formHorizontalFirstName\">\n                            <Form.Label>Pickup</Form.Label>\n                            <Form.Control name=\"pickupTime\" type=\"datetime-local\" value={this.state.pickupTime} min={this.state.today_date} onChange={this.handleChange} required />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formHorizontalLastName\">\n                            <Form.Label>Return</Form.Label>\n                            <Form.Control name=\"returnTime\" type=\"datetime-local\" value={this.state.returnTime} min={this.state.today_date} onChange={this.handleChange} required />\n                        </Form.Group>\n                        <Form.Group>\n                            <Button type=\"submit\" variant=\"info\" className=\"btn btn-lg btn-block\">Check Availability</Button>\n                        </Form.Group>\n                    </Form>\n                    \n                    {this.state.nextBookingExists &&\n                        <Container>\n                            <div className=\"dashboard-upcoming\">\n                                <h3>Upcoming Trip</h3>\n                                <a href={`/mybookings/${this.state.nextBooking._id}`}>View All Details</a>\n                            </div>\n                            <br/>\n                            <div className=\"dashboard-booking\">\n                                <div>\n                                    <Card>\n                                        <ListGroup className=\"list-group-flush\">\n                                            <ListGroup.Item>{this.state.location.address}</ListGroup.Item>\n                                        </ListGroup>\n                                        <Card.Body>\n                                            {\n                                                this.state.isLoading && \n                                                <div style={{ height: '500px' }}>\n                                                    <Map google={this.props.google}\n                                                        initialCenter={{\n                                                            lat: this.state.location.lat,\n                                                            lng: this.state.location.lng\n                                                        }}\n                                                        style={{ height: '500px', width: '90%' }}\n                                                        zoom={14}\n                                                        onClick={this.mapOnMapClick}>\n\n                                                        <Marker\n                                                            id={this.state.location.id}\n                                                            name={this.state.location.name}\n                                                            address={this.state.location.address}\n                                                            onClick={this.mapOnMarkerClick}\n                                                            position={{ lat: this.state.location.lat, lng: this.state.location.lng }}\n                                                        />\n\n                                                        <InfoWindow\n                                                            onClose={this.onInfoWindowClose}\n                                                            marker={this.state.activeMarker}\n                                                            visible={this.state.showingInfoWindow}>\n                                                            <div id=\"info-window\">\n                                                                <h2>{this.state.selectedPlace.name}</h2>\n                                                                <p>{this.state.selectedPlace.address}</p>\n                                                                <a href={\"/locations/\" + this.state.selectedPlace.id}>Check out this location</a>\n                                                            </div>\n                                                        </InfoWindow>\n                                                    </Map>\n                                                </div>\n                                            }\n                                        </Card.Body>\n                                    </Card>\n                                </div>\n                            </div>\n                        </Container>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: \"AIzaSyAIt4zpzH_STYDrjE5_9jg_F1Hc_sOphkY\"\n})(BookingDashboard);\n","/* My bookings page */\nimport React, { Component } from 'react';\nimport { Alert, Button, Container, Table, Card, ListGroup} from 'react-bootstrap';\nimport BookingServiceApi from '../../api/BookingServiceApi';\nimport LocationServiceApi from '../../api/LocationServiceApi';\nimport CarServiceApi from '../../api/CarServiceApi';\nimport UserServiceApi from '../../api/UserServiceApi';\nimport moment from 'moment'\n\nclass MyBookingPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookings: [],\n            locations: [],\n            destinations: [],\n            cars: [],\n            errorMessage: ''\n        };\n        this.handleCancelButton = this.handleCancelButton.bind(this);\n        this.getUsersBookings = this.getUsersBookings.bind(this);\n        this.checkBookingPast = this.checkBookingPast.bind(this);\n    }\n\n    componentDidMount() {\n        this.getUsersBookings();\n        // obtain all locations\n        LocationServiceApi.getAllLocations()\n            .then(res => {\n                let locationArray = this.state.locations;\n                let destinationArray = this.state.destinations;\n                res.data.forEach(location => {\n                    let locationObject = {\n                        id: location._id,\n                        address: location.address,\n                        name: location.name\n                    };\n                    let destinationObject = {\n                        id: location._id,\n                        address: location.address,\n                        name: location.name\n                    }\n                    locationArray.push(locationObject);\n                    destinationArray.push(destinationObject);\n\n                    this.setState({ locations: locationArray });\n                    this.setState({ destinations: destinationArray });\n                });\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            })\n        // obtain all cars\n        CarServiceApi.getAllCars()\n            .then(res => {\n                this.setState({\n                    cars: res.data.cars\n                });\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            });\n    }\n\n    getUsersBookings() {\n        const userDetails = UserServiceApi.getLoggedInUserDetails();\n        BookingServiceApi.getUserBookings(userDetails.id)\n            .then(res => {\n                // console.log(res.data.bookings)\n                this.setState({\n                    // sort bookings by latest\n                    bookings: res.data.bookings.reverse()\n                });\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            });\n    }\n\n    checkBookingPast(pickupTime) {\n        // check if booking pickup time hjas passed current time\n        let currentTime = new Date();\n        currentTime.setMinutes(currentTime.getMinutes() - currentTime.getTimezoneOffset());\n        return new Date(pickupTime) > currentTime;\n    }\n\n    handleCancelButton(booking) {\n        booking.status = 'Cancelled';\n        BookingServiceApi.modifyBooking(booking)\n            .then(() => {\n                this.getUsersBookings();\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"booking-list-grid\">\n                <div>\n                    {this.state.errorMessage && <Alert variant=\"danger\">\n                        <Alert.Heading>Error obtaining bookings!</Alert.Heading>\n                        <p>\n                            {this.state.errorMessage}\n                        </p>\n                    </Alert>}\n                </div>\n                <div>\n                    <div className=\"booking-list-block\">\n                        {this.state.bookings.map((booking,idx) =>\n                            <Card bg=\"light\" key={idx}>\n                                <Card.Body>\n                                    <Card.Title>\n                                        <div className=\"booking-list-title\">\n                                            <div>\n                                                {this.state.locations.map(location =>\n                                                    <>\n                                                        {location.id === booking.location &&\n                                                            <>\n                                                                {location.name}\n                                                            </>\n                                                        }\n                                                    </>\n                                                )}\n                                            </div>\n                                            <div>\n                                            {(booking.status === \"Confirmed\") && <b className=\"text-success\">{booking.status}</b>}\n                                            {(booking.status === \"Cancelled\") && <b className=\"text-danger\">{booking.status}</b> }\n                                            </div>\n                                        </div>\n                                    </Card.Title>\n                                </Card.Body>\n                                <ListGroup className=\"list-group-flush\">\n                                    <ListGroup.Item><b>Booking Id - </b>{booking.id}</ListGroup.Item>\n                                    <ListGroup.Item><b>Pickup - </b>{moment(booking.pickuptime).format('MMMM Do YYYY, h:mm a')}</ListGroup.Item>\n                                    <ListGroup.Item><b>Return - </b>{moment(booking.returntime).format('MMMM Do YYYY, h:mm a')}</ListGroup.Item>\n                                    <ListGroup.Item><b>Bus - </b>{\n                                        this.state.cars.map(car =>\n                                            <>\n                                                {car.id === booking.car &&\n                                                    <>\n                                                        {car.make}\n                                                    </>\n                                                }\n                                            </>\n                                        )}\n                                    </ListGroup.Item>\n                                    <ListGroup.Item><b>Price - </b>${booking.cost}/hr</ListGroup.Item>\n                                    <ListGroup.Item><b>Location - </b>\n                                        {this.state.locations.map(location =>\n                                            <>\n                                                {location.id === booking.location &&\n                                                    <>\n                                                        {location.name}\n                                                    </>\n                                                }\n                                            </>\n                                        )}\n                                    </ListGroup.Item>\n                                    <ListGroup.Item><b>Address - </b>\n                                        {this.state.locations.map(location =>\n                                            <>\n                                                {location.id === booking.location &&\n                                                    <>\n                                                        {location.address}\n                                                    </>\n                                                }\n                                            </>\n                                        )}\n                                    </ListGroup.Item>\n                                    <ListGroup.Item><b>Destination - </b>\n                                        {this.state.destinations.map(destination =>\n                                            <>\n                                                {destination.id === booking.destination &&\n                                                    <>\n                                                        {destination.address}\n                                                    </>\n                                                }\n                                            </>\n                                        )}\n                                    </ListGroup.Item>\n                                </ListGroup>\n                                <Card.Body>\n                                    <Card.Link href={`/mybookings/${booking.id}`}>View Details</Card.Link>\n                                    {(booking.status === \"Confirmed\" && this.checkBookingPast(booking.pickuptime)) &&\n                                        <Card.Link href=\"#\" onClick={() => this.handleCancelButton(booking)}>Cancel</Card.Link>\n                                    }\n                                </Card.Body>\n                            </Card>\n                        )}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MyBookingPage;\n","/* Bookings details page */\nimport React, { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport { Alert, Button, Col, ListGroup, Card } from 'react-bootstrap';\nimport moment from 'moment'\nimport BookingServiceApi from '../../api/BookingServiceApi';\nimport CarServiceApi from '../../api/CarServiceApi';\nimport LocationServiceApi from '../../api/LocationServiceApi';\n\nclass BookingDetailsPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            location: {},\n            destination: {},\n            booking: {},\n            car: {},\n            errorMessage: '',\n            activeMarker: {},\n            showingInfoWindow: false,\n            selectedPlace: {},\n            isLoading: false\n        };\n        this.handleCancelButton = this.handleCancelButton.bind(this);\n        this.getBookingDetails = this.getBookingDetails.bind(this);\n        this.checkBookingPast = this.checkBookingPast.bind(this);\n    }\n\n    getBookingDetails() {\n        // obtain a user's booking by booking id and also car and location associated\n        BookingServiceApi.getUserBooking(this.props.match.params.id)\n            .then(res => {\n                this.setState({\n                    booking: res.data.booking\n                });\n                CarServiceApi.getCar(this.state.booking.car)\n                    .then(res => {\n                        this.setState({\n                            car: res.data.car\n                        })\n                    });\n                LocationServiceApi.getLocationFromId(this.state.booking.location)\n                    .then(res => {\n                        LocationServiceApi.getGeocodeFromAddress(res.data.address)\n                            .then(newRes => {\n                                // Create object with address, latitude and longitude\n                                let locationObject = {\n                                    id: res.data._id,\n                                    address: res.data.address,\n                                    name: res.data.name,\n                                    lat: newRes.data.results[0].geometry.location.lat,\n                                    lng: newRes.data.results[0].geometry.location.lng,\n                                    cars: res.data.cars\n                                };\n                                // set new location object to react state array\n                                this.setState({\n                                    location: locationObject,\n                                    isLoading: true\n                                });\n                            });\n                    });\n                LocationServiceApi.getLocationFromId(this.state.booking.destination)\n                    .then(res => {\n                        LocationServiceApi.getGeocodeFromAddress(res.data.address)\n                            .then(newRes => {\n                                let destinationObject = {\n                                    id: res.data._id,\n                                    address: res.data.name,\n                                    name: res.data.name,\n                                    lat: newRes.data.results[0].geometry.location.lat,\n                                    lng: newRes.data.results[0].geometry.location.lng,\n                                    cars: res.data.cars\n                                };\n\n                                this.setState({\n                                    destination: destinationObject,\n                                    isLoading: true\n                                });\n                            });\n                    })\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            })\n    }\n\n    mapOnMarkerClick = (props, marker) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true,\n        });\n\n    mapOnMapClick = () =>\n        this.setState({\n            showingInfoWindow: false,\n            selectedPlace: {},\n            activeMarker: {}\n        });\n\n    componentDidMount() {\n        this.getBookingDetails();\n    }\n\n    handleCancelButton() {\n        // modify booking status to cancelled\n        let booking = this.state.booking;\n        booking.status = 'Cancelled';\n        booking.id = booking._id;\n        this.setState({\n            booking: booking\n        });\n        BookingServiceApi.modifyBooking(this.state.booking)\n            .then(() => {\n                this.getBookingDetails()\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            });\n    }\n\n    checkBookingPast(pickupTime) {\n        // check if booking pickup time has past current time\n        let currentTime = new Date();\n        currentTime.setMinutes(currentTime.getMinutes() - currentTime.getTimezoneOffset());\n        return new Date(pickupTime) > currentTime;\n    }\n\n    render() {\n        return (\n            <div className=\"booking-grid\">\n                <div style={{backgroundImage: `url(${this.state.car.image})`, backgroundPosition: 'center', backgroundSize: 'cover', backgroundRepeat: 'no-repeat'}}></div>\n                <div className=\"booking-details\">\n                    <div>\n                        <h2>Booking details</h2>\n                        <ListGroup ariant=\"flush\">\n                            <ListGroup.Item><b>Status</b> - {this.state.booking.status}</ListGroup.Item>\n                            <ListGroup.Item><b>Booking ID</b> - {this.state.booking._id}</ListGroup.Item>\n                            <ListGroup.Item><b>Pickup time</b> - {moment(this.state.booking.pickuptime).format('MMMM Do YYYY, h:mm a')}</ListGroup.Item>\n                            <ListGroup.Item><b>Return time</b> - {moment(this.state.booking.returntime).format('MMMM Do YYYY, h:mm a')}</ListGroup.Item>\n                            <ListGroup.Item><b>Amount Paid</b> - ${this.state.booking.cost}</ListGroup.Item>\n                            <ListGroup.Item><b>Address</b> - {this.state.location.address}</ListGroup.Item>\n                            <ListGroup.Item><b>Bus</b> - {this.state.car.make} | {this.state.car.colour} | {this.state.car.fueltype} | {this.state.car.bodytype} | {this.state.car.seats} seater | {this.state.car.numberplate}</ListGroup.Item>\n                            <ListGroup.Item>\n                            {\n                                (this.state.booking.status === \"Confirmed\" && this.checkBookingPast(this.state.booking.pickuptime)) &&\n                                    <Button variant=\"danger\" onClick={this.handleCancelButton}>Cancel Booking</Button>\n                            }\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </div>\n                    <div>\n                        <h2>See it on the map</h2>\n                        <Card>\n                            <Card.Body>\n                                {\n                                    this.state.isLoading && \n                                    <div style={{ height: '400px' }}>\n                                        <Map google={this.props.google}\n                                            initialCenter={{\n                                                lat: this.state.location.lat,\n                                                lng: this.state.location.lng\n                                            }}\n                                            style={{ height: '400px', width: '90%' }}\n                                            zoom={14}\n                                            onClick={this.mapOnMapClick}>\n\n                                            <Marker\n                                                id={this.state.location.id}\n                                                name={this.state.location.name}\n                                                address={this.state.location.address}\n                                                onClick={this.mapOnMarkerClick}\n                                                position={{ lat: this.state.location.lat, lng: this.state.location.lng }}\n                                            />\n\n                                            <InfoWindow\n                                                onClose={this.onInfoWindowClose}\n                                                marker={this.state.activeMarker}\n                                                visible={this.state.showingInfoWindow}>\n                                                <div id=\"info-window\">\n                                                    <h2>{this.state.selectedPlace.name}</h2>\n                                                    <p>{this.state.selectedPlace.address}</p>\n                                                    <a href={\"/locations/\" + this.state.selectedPlace.id}>Check out this location</a>\n                                                </div>\n                                            </InfoWindow>\n                                        </Map>\n                                    </div>\n                                }\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n            //     <h2>Booking details</h2>\n            //     {this.state.errorMessage && <Alert variant=\"danger\">\n            //         <Alert.Heading>Error obtaining booking!</Alert.Heading>\n            //         <p>\n            //             {this.state.errorMessage}\n            //         </p>\n            //     </Alert>}\n            //             \n            //             <Col sm={4}>\n            //                 <div className=\"cars-div-white\" style={{ 'border': 'solid black 2px' }}>\n            //                     <img src={this.state.car.image} alt=\"car\" width=\"100\" />\n            //                     <h2 style={{ marginTop: '1vh' }}>{this.state.car.make}</h2>\n            //                     <p>{this.state.car.fueltype}, {this.state.car.bodytype}, {this.state.car.seats} seaters, {this.state.car.colour}</p>\n            //                     <h5>Number Plate: {this.state.car.numberplate}</h5>\n            //                     <p><b>Bus ID: </b>{this.state.car._id}</p>\n            //                 </div>\n            //             </Col>\n            //         </>\n            //     }\n            // </div>\n        )\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: \"AIzaSyAIt4zpzH_STYDrjE5_9jg_F1Hc_sOphkY\"\n})(BookingDetailsPage);\n","/* My profile page for customers */\nimport React, { Component } from 'react';\nimport { Button, Container } from 'react-bootstrap';\nconst { default: UserServiceApi } = require(\"../api/UserServiceApi\");\n\nclass MyProfilePage extends Component {\n    render() {\n        const userData = UserServiceApi.getLoggedInUserDetails();\n        return (\n            <Container>\n                <h2>My Profile</h2>\n                <strong>First name: </strong>{userData.firstname} <br></br>\n                <strong>Last name: </strong>{userData.lastname} <br></br>\n                <strong>Email: </strong>{userData.email} <br></br>\n                <strong>Customer ID: </strong>{userData.id} <br></br>\n                <Button href='/mybookings'>View My Bookings</Button>\n            </Container>\n        )\n    }\n}\n\nexport default MyProfilePage;\n","/* Staff overview page */\nimport React, { Component } from 'react';\nconst { default: UserServiceApi } = require(\"../../api/UserServiceApi\");\n\nexport default class overview extends Component {\n    render() {\n        const userData = UserServiceApi.getLoggedInUserDetails();\n        return (\n            <div className=\"container\">\n                <h2>My Profile</h2>\n                <strong>First name: </strong>{userData.firstname} <br></br>\n                <strong>Last name: </strong>{userData.lastname} <br></br>\n                <strong>Email: </strong>{userData.email} <br></br>\n                <strong>Staff ID: </strong>{userData.id} <br></br>\n                <strong>Staff type: </strong>{userData.usertype} <br></br>\n            </div>\n        )\n    }\n}\n","/* Admin sign up page */\nimport React, { Component } from 'react';\nimport { Form, Col, Button, Row, Alert } from 'react-bootstrap';\nimport UserServiceApi from '../../api/UserServiceApi.js'\n\nclass AdminSignUpPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstname: '',\n            lastname: '',\n            email: '',\n            password: '',\n            usertype: '',\n            errorMessage: '',\n            successMessage: ''\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    /* Set react state for each input when user inputs something on signup form */\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    handleSubmit = event => {\n        // generate new user object\n        let newUser = {\n            firstname: this.state.firstname.trim(),\n            lastname: this.state.lastname.trim(),\n            email: this.state.email,\n            password: this.state.password,\n            usertype: this.state.usertype\n        };\n        // input validation\n        if (this.state.firstname === '') {\n            return this.setState({ errorMessage: \"First name can't be empty!\" });\n        }\n        if (this.state.lastname === '') {\n            return this.setState({ errorMessage: \"Last name can't be empty!\" });\n        }\n        const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!emailRegex.test(String(this.state.email).toLowerCase())) {\n            return this.setState({ errorMessage: \"Please enter a valid email!\" });\n        }\n        // publish create user request to backend\n        UserServiceApi.createNewUser(newUser).then(() => {\n            this.setState({\n                successMessage: 'User has been created!',\n                errorMessage: ''\n            });\n        }).catch((error) => {\n            // display error if there's any\n            this.setState({ errorMessage: error.response.data.message });\n        })\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h2>Create Account</h2>\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Sign up failed!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                {this.state.successMessage && <Alert variant=\"success\">\n                    <Alert.Heading>Account created!</Alert.Heading>\n                    <p>\n                        {this.state.successMessage}\n                    </p>\n                </Alert>}\n                <Form>\n                    <Form.Group as={Row} controlId=\"formHorizontalFirstName\">\n                        <Form.Label column sm={2}>\n                            First Name\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"firstname\" type=\"firstname\" placeholder=\"First Name\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalLastName\">\n                        <Form.Label column sm={2}>\n                            Last Name\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"lastname\" type=\"lastname\" placeholder=\"Last Name\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                        <Form.Label column sm={2}>\n                            Email\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"email\" type=\"email\" placeholder=\"Email\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalPassword\">\n                        <Form.Label column sm={2}>\n                            Password\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"password\" type=\"password\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" title=\"Must contain: at least one number, one uppercase, lowercase letter, and at least 8 or more characters\" placeholder=\"Password\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row} controlId=\"formHorizontalUserType\">\n                        <Form.Label column sm={2}>Account Type</Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"usertype\" as=\"select\" onChange={this.handleChange} required>\n                                <option disabled selected>Select account type</option>\n                                <option>customer</option>\n                                <option>staff</option>\n                                <option>admin</option>\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n\n                    <Form.Group as={Row}>\n                        <Col sm={{ span: 10, offset: 2 }}>\n                            <Button onClick={this.handleSubmit}>Create Account</Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n\n            </div>\n        )\n    }\n}\n\nexport default AdminSignUpPage;\n","/* Create car page */\nimport React, { Component } from 'react';\nimport LocationServiceApi from '../../api/LocationServiceApi';\nimport CarServiceApi from '../../api/CarServiceApi';\nimport { CAR_COLOURS, CAR_BODY_TYPES, CAR_FUEL_TYPES, CAR_SEATS, FILE_UPLOAD_LIMIT } from '../../Constants.js';\nimport { Form, Col, Button, Row, Alert } from 'react-bootstrap';\n\nexport default class createCar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            make: '',\n            seats: '',\n            bodytype: '',\n            numberplate: '',\n            colour: '',\n            costperhour: '',\n            fueltype: '',\n            location: '',\n            locationList: [],\n            disableSubmit: false,\n            successMsg: '',\n            errMsg: '',\n            b64photo: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleFile = this.handleFile.bind(this);\n    }\n\n    resetState = () => {\n        this.setState({\n            make: '',\n            seats: '',\n            bodytype: '',\n            numberplate: '',\n            colour: '',\n            costperhour: '',\n            fueltype: '',\n            location: '',\n            b64photo: ''\n        });\n    }\n\n    handleFile = (event) => {\n        // handle image uploaded for car\n        let files = event.target.files;\n        if (files !== null) {\n            // file size validation\n            if (event.target.files[0].size > FILE_UPLOAD_LIMIT) {\n                return this.setState({\n                    errMsg: 'Image exceeded upload size limit! Please try again with another image.'\n                });\n            }\n            let reader = new FileReader();\n            reader.readAsDataURL(files[0]);\n            reader.onload = (event) => {\n                this.setState({\n                    b64photo: event.target.result,\n                    errMsg: ''\n                });\n            }\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    inputValidation = () => {\n        const { make, seats, bodytype, numberplate,\n            colour, costperhour, fueltype, location, b64photo } = this.state;\n\n        if (make === '' || seats === '' || bodytype === '' || numberplate === ''\n            || colour === '' || costperhour === '' || fueltype === '' || location === '' || b64photo === '') {\n            this.setState({\n                errMsg: \"Please fill in everything\"\n            });\n            return false;\n        }\n        else {\n            this.setState({\n                errMsg: \"\"\n            })\n            return true;\n        }\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (!this.inputValidation()) {\n            return;\n        }\n        this.setState({\n            disableSubmit: true\n        })\n        // generate a new car object\n        const newCar = {\n            make: this.state.make.trim(),\n            seats: this.state.seats,\n            bodytype: this.state.bodytype,\n            numberplate: this.state.numberplate.trim(),\n            colour: this.state.colour,\n            costperhour: this.state.costperhour,\n            fueltype: this.state.fueltype,\n            location: this.state.location,\n            b64photo: this.state.b64photo\n        };\n        // publish car object to backend\n        CarServiceApi.createNewCar(newCar).then((res) => {\n            this.setState({\n                disableSubmit: false,\n                successMsg: \"Successfully added car\",\n                errMsg: \"\"\n            });\n        }, (err) => {\n            this.setState({\n                disableSubmit: false,\n                successMsg: \"\",\n                errMsg: err.response.data.message\n            });\n            console.log(err.response);\n        })\n    }\n\n    componentDidMount() {\n        LocationServiceApi.getAllLocations().then((res) => {\n            res.data.map(location => this.setState({ locationList: this.state.locationList.concat(location.address) }));\n        }, (err) => {\n            console.log(err.response);\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h2>Create Bus</h2>\n                {this.state.errMsg &&\n                    <Alert variant=\"danger\">\n                        <Alert.Heading>Add bus failed!</Alert.Heading>\n                        <p>\n                            {this.state.errMsg}\n                        </p>\n                    </Alert>\n                }\n\n                {this.state.successMsg &&\n                    <Alert variant=\"success\">\n                        <Alert.Heading>Add bus succeed!</Alert.Heading>\n                        <p>\n                            {this.state.successMsg}\n                        </p>\n                    </Alert>\n                }\n                <Form>\n                    <Form.Group as={Row} controlId=\"formHorizontalMake\">\n                        <Form.Label column sm={2}>\n                            Make\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"make\" type=\"make\" placeholder=\"Bus Make\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalSeats\">\n                        <Form.Label column sm={2}>\n                            Seats\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" name=\"seats\" type=\"seats\" onChange={this.handleChange} required>\n                                <option disabled selected>Select seat number</option>\n                                {\n                                    CAR_SEATS.map((option, index) =>\n                                        <option key={index} value={option}>{option}</option>\n                                    )\n                                }\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalBodyType\">\n                        <Form.Label column sm={2}>\n                            Body type\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" name=\"bodytype\" type=\"bodytype\" onChange={this.handleChange} required>\n                                <option disabled selected>Select body type</option>\n                                {\n                                    CAR_BODY_TYPES.map((option, index) =>\n                                        <option key={index} value={option}>{option}</option>\n                                    )\n                                }\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalNumberPlate\">\n                        <Form.Label column sm={2}>\n                            Number Plate\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"numberplate\" type=\"numberplate\" placeholder=\"Enter plate number\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalColour\">\n                        <Form.Label column sm={2}>\n                            Colour\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" name=\"colour\" type=\"colour\" onChange={this.handleChange} required>\n                                <option disabled selected>Select colour</option>\n                                {\n                                    CAR_COLOURS.map((option, index) =>\n                                        <option key={index} value={option}>{option}</option>\n                                    )\n                                }\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalCostPerHour\">\n                        <Form.Label column sm={2}>\n                            Cost per hour\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"costperhour\" type=\"number\" placeholder=\"Select cost per hour\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalFuelType\">\n                        <Form.Label column sm={2}>\n                            Fuel type\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" name=\"fueltype\" type=\"fueltype\" onChange={this.handleChange} required>\n                                <option disabled selected>Select fuel type</option>\n                                {\n                                    CAR_FUEL_TYPES.map((option, index) =>\n                                        <option key={index} value={option}>{option}</option>\n                                    )\n                                }\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalLocation\">\n                        <Form.Label column sm={2}>\n                            Location\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" name=\"location\" type=\"location\" onChange={this.handleChange} required>\n                                <option disabled selected>Select location</option>l\n                                {\n                                    this.state.locationList.map((option, index) =>\n                                        <option key={index} value={option}>{option}</option>\n                                    )\n                                }\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalLocation\">\n                        <Form.Label column sm={2}>\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.File\n                                id=\"custom-file\"\n                                label=\"Bus Image (4MB max)\"\n                                name=\"b64photo\"\n                                accept=\"image/*\"\n                                onChange={this.handleFile}\n                            />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Col sm={{ span: 10, offset: 2 }}>\n                            <Button onClick={this.handleSubmit} disabled={this.state.disableSubmit}>Create Bus</Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </div>\n        )\n    }\n}\n","/* Create location page */\nimport React, { Component } from 'react'\nimport LocationServiceApi from '../../api/LocationServiceApi'\nimport { Form, Col, Button, Row, Alert } from 'react-bootstrap';\nimport PlacesAutocomplete from 'react-places-autocomplete';\n\nexport default class CreateLocation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            address: '',\n            errMsg: '',\n            gmapsLoaded: false,\n            disableSubmit: false,\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleAutocomplete = this.handleAutocomplete.bind(this);\n    }\n\n    initMap = () => {\n        this.setState({\n            gmapsLoaded: true,\n        });\n    }\n\n    handleAutocomplete = address => {\n        this.setState({ address });\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleSubmit = event => {\n        // create new location handler\n        const { name, address } = this.state;\n        event.preventDefault();\n\n        this.setState({\n            successMsg: \"\",\n            errMsg: \"\",\n            disableSubmit: true\n        });\n\n        // input validation\n        if (name === '' || address === '') {\n            this.setState({\n                errMsg: \"name and address cannot be empty\",\n                disableSubmit: false\n            });\n        } else {\n            // create new location object\n            let newLoc = {\n                name: name.trim(),\n                address: address\n            };\n            // publish location object to backend\n            LocationServiceApi.createNewLocation(newLoc).then(res => {\n                console.log(res.data)\n                this.setState({\n                    successMsg: \"Location successfully added\",\n                    disableSubmit: false,\n                    name: '',\n                    address: ''\n                });\n            }, error => {\n                this.setState({\n                    errMsg: error.response.data.message,\n                    disableSubmit: false\n                });\n            });\n        }\n    }\n\n    componentDidMount() {\n        // initialise address autocomplete api\n        window.initMap = this.initMap;\n        const gmapScriptEl = document.createElement(`script`);\n        gmapScriptEl.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyAIt4zpzH_STYDrjE5_9jg_F1Hc_sOphkY&libraries=places&callback=initMap`;\n        document.querySelector(`body`).insertAdjacentElement(`beforeend`, gmapScriptEl);\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h2>Create Location</h2>\n                {this.state.errMsg &&\n                    <Alert variant=\"danger\">\n                        <Alert.Heading>Add location failed!</Alert.Heading>\n                        <p>\n                            {this.state.errMsg}\n                        </p>\n                    </Alert>\n                }\n\n                {this.state.successMsg &&\n                    <Alert variant=\"success\">\n                        <Alert.Heading>Add location succeed!</Alert.Heading>\n                        <p>\n                            {this.state.successMsg}\n                        </p>\n                    </Alert>\n                }\n                <Form>\n                    <Form.Group as={Row} controlId=\"formHorizontalName\">\n                        <Form.Label column sm={2} required>\n                            Name\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"name\" type=\"name\" placeholder=\"Location Name\" onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalName\">\n                        <Form.Label column sm={2}>\n                            Enter Address\n                        </Form.Label>\n                        <Col sm={10}>\n                            {this.state.gmapsLoaded &&\n                                <PlacesAutocomplete\n                                    value={this.state.address}\n                                    onChange={this.handleAutocomplete}\n                                    onSelect={this.handleSelect}\n                                >\n                                    {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                                        <div>\n                                            <Form.Control\n                                                {...getInputProps({\n                                                    placeholder: 'Search Places ...',\n                                                    className: 'location-search-input',\n                                                    required: true\n                                                })}\n                                            />\n                                            <div className=\"autocomplete-dropdown-container\">\n                                                {loading && <div>Loading...</div>}\n                                                {suggestions.map(suggestion => {\n                                                    const className = suggestion.active\n                                                        ? 'suggestion-item--active'\n                                                        : 'suggestion-item';\n                                                    // inline style for demonstration purpose\n                                                    const style = suggestion.active\n                                                        ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                                                        : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                                                    return (\n                                                        <div\n                                                            {...getSuggestionItemProps(suggestion, {\n                                                                className,\n                                                                style,\n                                                            })}\n                                                        >\n                                                            <span>{suggestion.description}</span>\n                                                        </div>\n                                                    );\n                                                })}\n                                            </div>\n                                        </div>\n                                    )}\n                                </PlacesAutocomplete>\n                            }\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Col sm={{ span: 10, offset: 2 }}>\n                            <Button onClick={this.handleSubmit} disabled={this.state.disableSubmit}>Create Location</Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </div>\n        )\n    }\n}\n","/* View all customers page */\nimport React, { Component } from 'react';\nimport { Alert, Button, Table, Container } from 'react-bootstrap';\nconst { default: UserServiceApi } = require(\"../../api/UserServiceApi\");\n\nexport default class ViewAllCustomersPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            customers: [],\n            errorMessage: ''\n        };\n    }\n\n    componentDidMount() {\n        // fetch all customers\n        UserServiceApi.getAllCustomers().then(res => {\n            this.setState({\n                customers: res.data.customers.reverse()\n            });\n        }).catch((error) => {\n            this.setState({ errorMessage: error.response.data.message });\n        });\n    }\n\n    render() {\n        return (\n            <Container>\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error obtaining customers!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                <h2>View All Customers</h2>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Customer ID</th>\n                            <th>First name</th>\n                            <th>Last name</th>\n                            <th>Email</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.customers.map(customer =>\n                            <tr>\n                                <td>{customer.id}</td>\n                                <td>{customer.firstname}</td>\n                                <td>{customer.lastname}</td>\n                                <td>{customer.email}</td>\n                                <td><Button href={`/admin/view/customers/${customer.id}`}>View</Button></td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n            </Container>\n        )\n    }\n}\n","/* View customer page */\nimport React, { Component } from 'react';\nimport { Alert, Button, Container, ButtonGroup } from 'react-bootstrap';\nconst { default: UserServiceApi } = require(\"../../api/UserServiceApi\");\n\nexport default class ViewCustomerPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            customer: {},\n            errorMessage: ''\n        };\n    }\n\n    componentDidMount() {\n        // fetch customer by id\n        UserServiceApi.getUserFromId(this.props.match.params.id).then(res => {\n            this.setState({\n                customer: res.data.user\n            });\n        }).catch((error) => {\n            this.setState({ errorMessage: error.response.data.message });\n        });\n    }\n\n    render() {\n        return (\n            <Container>\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error fetching customer details!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                <h2>Customer Details</h2>\n                <strong>Customer ID:</strong> {this.state.customer._id} <br></br>\n                <strong>First name:</strong> {this.state.customer.firstname} <br></br>\n                <strong>Last name:</strong> {this.state.customer.lastname} <br></br>\n                <strong>Email:</strong> {this.state.customer.email} <br></br>\n                <ButtonGroup style={{ marginTop: '3vh' }}>\n                    <Button href={`/admin/view/customers/${this.state.customer._id}/bookings`}>View Customer's Bookings</Button>\n                    <Button href={`/admin/modify/customers/${this.state.customer._id}`}>Modify Customer Details</Button>\n                </ButtonGroup>\n            </Container>\n        )\n    }\n}\n","/* Modify customer details page */\nimport React, { Component } from 'react';\nimport { Alert, Button, Form, Col, Row } from 'react-bootstrap';\nconst { default: UserServiceApi } = require(\"../../api/UserServiceApi\");\n\nexport default class ModifyCustomerDetailsPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            customer: {},\n            firstname: '',\n            lastname: '',\n            email: '',\n            fetchErrorMessage: '',\n            modifyErrorMessage: ''\n        };\n    }\n\n    componentDidMount() {\n        // fetch user by id\n        UserServiceApi.getUserFromId(this.props.match.params.id).then(res => {\n            this.setState({\n                firstname: res.data.user.firstname,\n                lastname: res.data.user.lastname,\n                email: res.data.user.email,\n                id: res.data.user._id,\n                customer: res.data.user\n            });\n        }).catch((error) => {\n            this.setState({ fetchErrorMessage: error.response.data.message });\n        });\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value })\n    }\n\n    handleSubmit = (event) => {\n        // modify customer details handler\n        event.preventDefault();\n        let modifiedCustomer = this.state.customer;\n        // input validation\n        if (this.state.firstname.trim() !== '')\n            modifiedCustomer.firstname = this.state.firstname.trim();\n        else\n            return this.setState({ modifyErrorMessage: \"First name shall not be empty\" });\n        if (this.state.lastname.trim() !== '')\n            modifiedCustomer.lastname = this.state.lastname.trim();\n        else\n            return this.setState({ modifyErrorMessage: \"Last name shall not be empty\" });\n        if (this.state.email.trim() !== '') {\n            let checkEmailExistsPayload = {\n                email: this.state.email.trim()\n            }\n            // check if modified email exists\n            UserServiceApi.checkEmailExists(checkEmailExistsPayload).then(res => {\n                if (!(res.data.exist) || (this.state.email === this.state.customer.email)) {\n                    modifiedCustomer.email = this.state.email.trim();\n                    // publish modified customer to backend\n                    UserServiceApi.updateUser(modifiedCustomer).then(res => {\n                        return window.location.href = `/admin/view/customers/${this.state.customer._id}`;\n                    }).catch((error) => {\n                        return this.setState({ modifyErrorMessage: error.response.data.message });\n                    })\n                } else {\n                    return this.setState({ modifyErrorMessage: \"Email already exists! Please revert or try another one.\" });\n                }\n            }).catch(() => {\n                return this.setState({ modifyErrorMessage: \"Error checking if email exists!\" });\n            })\n        }\n        else\n            return this.setState({ modifyErrorMessage: \"Email shall not be empty\" });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                {this.state.fetchErrorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error fetching customer details!</Alert.Heading>\n                    <p>\n                        {this.state.fetchErrorMessage}\n                    </p>\n                </Alert>}\n                {this.state.modifyErrorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error modifying customer details!</Alert.Heading>\n                    <p>\n                        {this.state.modifyErrorMessage}\n                    </p>\n                </Alert>}\n                <h2>Modify Customer Details</h2>\n                <strong>Customer ID:</strong> {this.state.customer._id} <br></br>\n                <Form>\n                    <Form.Group as={Row} controlId=\"formHorizontalFirstName\">\n                        <Form.Label column sm={2}>\n                            First Name\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"firstname\" type=\"text\" value={this.state.firstname} onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalLastName\">\n                        <Form.Label column sm={2}>\n                            Last Name\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"lastname\" type=\"text\" value={this.state.lastname} onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                        <Form.Label column sm={2}>\n                            Email\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"email\" type=\"email\" value={this.state.email} onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Col sm={{ span: 10, offset: 2 }}>\n                            <Button onClick={this.handleSubmit}>Modify User</Button>\n                            <Button variant=\"danger\" href={`/admin/view/customers/${this.state.customer._id}`}>Cancel</Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </div>\n        )\n    }\n}\n","/* View all bookings page */\nimport React, { Component } from 'react';\nimport { Alert, Button, Table, Container } from 'react-bootstrap';\nimport BookingServiceApi from '../../api/BookingServiceApi';\nconst { default: LocationServiceApi } = require(\"../../api/LocationServiceApi\");\nconst { default: CarServiceApi } = require(\"../../api/CarServiceApi\");\n\nexport default class ViewAllBookingsPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookings: [],\n            locations: [],\n            cars: [],\n            errorMessage: ''\n        };\n    }\n\n    componentDidMount() {\n        // obtain all bookings, locations and cars for rendering\n        BookingServiceApi.getAllBookings().then(res => {\n            this.setState({\n                // sort bookings by latest\n                bookings: res.data.bookings.reverse()\n            });\n        }).catch((error) => {\n            this.setState({ errorMessage: error.response.data.message });\n        });\n        LocationServiceApi.getAllLocations()\n            .then(res => {\n                let locationArray = this.state.locations;\n                res.data.forEach(location => {\n                    let locationObject = {\n                        id: location._id,\n                        address: location.address,\n                        name: location.name\n                    };\n                    locationArray.push(locationObject);\n                    this.setState({ locations: locationArray });\n                });\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            })\n        CarServiceApi.getAllCars()\n            .then(res => {\n                this.setState({\n                    cars: res.data.cars\n                });\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            });\n    }\n\n    render() {\n        return (\n            <Container>\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error fetching all bookings!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                <h2>View All Bookings</h2>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Booking ID</th>\n                            <th>User ID</th>\n                            <th>Booked Time</th>\n                            <th>Pickup Time</th>\n                            <th>Return Time</th>\n                            <th>Car ID</th>\n                            <th>Cost</th>\n                            <th>Location</th>\n                            <th>Address</th>\n                            <th>Status</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.bookings.map(booking =>\n                            <tr>\n                                <td>{booking.id}</td>\n                                <td><a href={`/admin/view/customers/${booking.user}`}>{booking.user}</a></td>\n                                <td>{booking.bookedtime}</td>\n                                <td>{booking.pickuptime}</td>\n                                <td>{booking.returntime}</td>\n                                <td>\n                                    {this.state.cars.map(car =>\n                                        <>\n                                            {car.id === booking.car &&\n                                                <>\n                                                    <a href={`/admin/view/cars/${booking.car}`}>{car.make}</a>\n                                                </>\n                                            }\n                                        </>\n                                    )}\n                                </td>\n                                <td>${booking.cost}</td>\n                                <td>\n                                    {this.state.locations.map(location =>\n                                        <>\n                                            {location.id === booking.location &&\n                                                <>\n                                                    <a href={`/admin/view/location/${booking.location}`}>{location.name}</a>\n                                                </>\n                                            }\n                                        </>\n                                    )}\n                                </td>\n                                <td>\n                                    {this.state.locations.map(location =>\n                                        <>\n                                            {location.id === booking.location &&\n                                                <>\n                                                    {location.address}\n                                                </>\n                                            }\n                                        </>\n                                    )}\n                                </td>\n                                <td>{booking.status}</td>\n                                <td>\n                                    <Button href={`/admin/view/bookings/${booking.id}`}>View</Button>\n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n            </Container>\n        )\n    }\n}\n","/* View booking page */\nimport React, { Component } from 'react';\nimport { Alert, Button, Container, Col } from 'react-bootstrap';\nimport BookingServiceApi from '../../api/BookingServiceApi';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nconst { default: LocationServiceApi } = require(\"../../api/LocationServiceApi\");\nconst { default: CarServiceApi } = require(\"../../api/CarServiceApi\");\n\nclass ViewBookingPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            booking: {},\n            car: {},\n            location: {},\n            errorMessage: '',\n            activeMarker: {},\n            showingInfoWindow: false,\n            selectedPlace: {},\n            isLoading: false\n        };\n        this.handleCancelButton = this.handleCancelButton.bind(this);\n    }\n\n    getBookingDetails() {\n        // get booking details by id, also fetch required elements\n        BookingServiceApi.getBooking(this.props.match.params.id)\n            .then(res => {\n                this.setState({\n                    booking: res.data.booking\n                });\n                CarServiceApi.getCar(this.state.booking.car)\n                    .then(res => {\n                        this.setState({\n                            car: res.data.car\n                        });\n                    });\n                LocationServiceApi.getLocationFromId(this.state.booking.location)\n                    .then(res => {\n                        LocationServiceApi.getGeocodeFromAddress(res.data.address)\n                            .then(newRes => {\n                                // Create object with address, latitude and longitude\n                                let locationObject = {\n                                    id: res.data._id,\n                                    address: res.data.address,\n                                    name: res.data.name,\n                                    lat: newRes.data.results[0].geometry.location.lat,\n                                    lng: newRes.data.results[0].geometry.location.lng,\n                                    cars: res.data.cars\n                                };\n                                // set new location object to react state array\n                                this.setState({\n                                    location: locationObject,\n                                    isLoading: true\n                                });\n                            });\n                    });\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            });\n    }\n\n    mapOnMarkerClick = (props, marker) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true,\n        });\n\n    mapOnMapClick = () =>\n        this.setState({\n            showingInfoWindow: false,\n            selectedPlace: {},\n            activeMarker: {}\n        });\n\n    componentDidMount() {\n        this.getBookingDetails();\n    }\n\n    handleCancelButton() {\n        // change booking status to cancelled\n        let booking = this.state.booking;\n        booking.status = 'Cancelled';\n        booking.id = booking._id;\n        this.setState({\n            booking: booking\n        });\n        // update booking object in backend\n        BookingServiceApi.modifyBooking(this.state.booking)\n            .then(() => {\n                this.getBookingDetails();\n            });\n    }\n\n    checkBookingPast(pickupTime) {\n        // check if booking pickup time has past current time\n        let currentTime = new Date();\n        currentTime.setMinutes(currentTime.getMinutes() - currentTime.getTimezoneOffset());\n        return new Date(pickupTime) > currentTime;\n    }\n\n    render() {\n        return (\n            <Container>\n                <h2>Booking details</h2>\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error obtaining booking!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                {this.state.isLoading && <div id=\"garage-map\" style={{ height: '400px' }}>\n                    <Map google={this.props.google}\n                        initialCenter={{\n                            lat: this.state.location.lat,\n                            lng: this.state.location.lng\n                        }}\n                        style={{ height: '400px', width: '400px' }}\n                        zoom={14}\n                        onClick={this.mapOnMapClick}>\n\n                        <Marker\n                            id={this.state.location.id}\n                            name={this.state.location.name}\n                            address={this.state.location.address}\n                            onClick={this.mapOnMarkerClick}\n                            position={{ lat: this.state.location.lat, lng: this.state.location.lng }}\n                        />\n\n                        <InfoWindow\n                            onClose={this.onInfoWindowClose}\n                            marker={this.state.activeMarker}\n                            visible={this.state.showingInfoWindow}>\n                            <div id=\"info-window\">\n                                <h2>{this.state.selectedPlace.name}</h2>\n                                <p>{this.state.selectedPlace.address}</p>\n                                <a href={\"/locations/\" + this.state.selectedPlace.id}>Check out this location</a>\n                            </div>\n                        </InfoWindow>\n                    </Map>\n                </div>}\n                {!this.state.errorMessage &&\n                    <>\n                        <b>Booking ID: </b> {this.state.booking._id} <br></br>\n                        <b>Booking time: </b> {this.state.booking.bookedtime} <br></br>\n                        <b>Pickup time: </b> {this.state.booking.pickuptime} <br></br>\n                        <b>Return time: </b> {this.state.booking.returntime} <br></br>\n                        <b>Cost: </b> ${this.state.booking.cost} <br></br>\n                        <b>Location: </b> <a href={`/admin/view/location/${this.state.location.id}`}>{this.state.location.name}</a> <br></br>\n                        <b>Address: </b> {this.state.location.address} <br></br>\n                        <b>Status: </b> {this.state.booking.status} <br></br>\n                        {(this.state.booking.status === \"Confirmed\" && this.checkBookingPast(this.state.booking.pickuptime)) &&\n                            <Button variant=\"danger\" onClick={this.handleCancelButton}>Cancel</Button>\n                        }\n                        <Col sm={4}>\n                            <div className=\"cars-div-white\" style={{ 'border': 'solid black 2px' }}>\n                                <img src={this.state.car.image} alt=\"car\" width=\"100\" />\n                                <h2 style={{ marginTop: '1vh' }}>{this.state.car.make}</h2>\n                                <p>{this.state.car.fueltype}, {this.state.car.bodytype}, {this.state.car.seats} seaters, {this.state.car.colour}</p>\n                                <h5>${this.state.car.costperhour} per hour</h5>\n                                <h5>Number Plate: {this.state.car.numberplate}</h5>\n                                <a href={`/admin/view/cars/${this.state.car._id}`}><b>Bus ID: </b>{this.state.car._id}</a>\n                            </div>\n                        </Col>\n                    </>\n                }\n            </Container>\n        )\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: \"AIzaSyAIt4zpzH_STYDrjE5_9jg_F1Hc_sOphkY\"\n})(ViewBookingPage);\n","/* View customer bookings page */\nimport React, { Component } from 'react';\nimport { Alert, Button, Table } from 'react-bootstrap';\nimport BookingServiceApi from '../../api/BookingServiceApi';\nconst { default: LocationServiceApi } = require(\"../../api/LocationServiceApi\");\nconst { default: CarServiceApi } = require(\"../../api/CarServiceApi\");\n\nexport default class ViewCustomerBookingsPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookings: [],\n            locations: [],\n            cars: [],\n            errorMessage: ''\n        };\n    }\n\n    componentDidMount() {\n        // get all of customer's bookings details by user id and also required elements\n        BookingServiceApi.getUserBookings(this.props.match.params.id).then(res => {\n            this.setState({\n                // sort bookings by latest\n                bookings: res.data.bookings.reverse()\n            })\n        }).catch((error) => {\n            this.setState({ errorMessage: error.response.data.message });\n        })\n        LocationServiceApi.getAllLocations()\n            .then(res => {\n                let locationArray = this.state.locations;\n                res.data.forEach(location => {\n                    let locationObject = {\n                        id: location._id,\n                        address: location.address,\n                        name: location.name\n                    };\n                    locationArray.push(locationObject);\n                    this.setState({ locations: locationArray });\n                })\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            });\n        CarServiceApi.getAllCars()\n            .then(res => {\n                this.setState({\n                    cars: res.data.cars\n                });\n            }).catch((error) => {\n                this.setState({ errorMessage: error.response.data.message });\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error fetching customer's bookings!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                <h2>Bookings for Customer {this.props.match.params.id}</h2>\n                <Button href={`/admin/view/customers/${this.props.match.params.id}`}>View Customer Profile</Button>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Booking ID</th>\n                            <th>Booked Time</th>\n                            <th>Pickup Time</th>\n                            <th>Return Time</th>\n                            <th>Car</th>\n                            <th>Cost</th>\n                            <th>Location</th>\n                            <th>Address</th>\n                            <th>Status</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.bookings.map(booking =>\n                            <tr>\n                                <td>{booking.id}</td>\n                                <td>{booking.bookedtime}</td>\n                                <td>{booking.pickuptime}</td>\n                                <td>{booking.returntime}</td>\n                                <td>\n                                    {this.state.cars.map(car =>\n                                        <>\n                                            {car.id === booking.car &&\n                                                <>\n                                                    <a href={`/admin/view/cars/${booking.car}`}>{car.make}</a>\n                                                </>\n                                            }\n                                        </>\n                                    )}\n                                </td>\n                                <td>${booking.cost}</td>\n                                <td>\n                                    {this.state.locations.map(location =>\n                                        <>\n                                            {location.id === booking.location &&\n                                                <>\n                                                    <a href={`/admin/view/location/${booking.location}`}>{location.name}</a>\n                                                </>\n                                            }\n                                        </>\n                                    )}\n                                </td>\n                                <td>\n                                    {this.state.locations.map(location =>\n                                        <>\n                                            {location.id === booking.location &&\n                                                <>\n                                                    {location.address}\n                                                </>\n                                            }\n                                        </>\n                                    )}\n                                </td>\n                                <td>{booking.status}</td>\n                                <td>\n                                    <Button href={`/admin/view/bookings/${booking.id}`}>View</Button>\n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n            </div>\n        )\n    }\n}\n","/* View all cars page */\nimport React, { Component } from 'react';\nimport { Container, Table, Alert } from 'react-bootstrap';\nimport CarServiceApi from '../../api/CarServiceApi';\nimport LocationServiceApi from '../../api/LocationServiceApi';\nimport { withRouter } from 'react-router-dom';\n\nclass ViewAllCars extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cars: [],\n            errorMessage: ''\n        };\n        this.viewCarDetails = this.viewCarDetails.bind(this);\n    }\n\n    viewCarDetails(id) {\n        this.props.history.push(`/admin/view/cars/${id}`);\n    }\n\n    componentDidMount() {\n        // fetch all cars\n        CarServiceApi.getAllCars().then(res => {\n            res.data.cars.forEach(car => {\n                // fetch location details for each car\n                LocationServiceApi.getLocationFromId(car.location).then(res => {\n                    car.location = res.data.name;\n                    car.locationId = res.data._id;\n                    this.state.cars.push(car);\n                    this.setState({\n                        cars: this.state.cars\n                    });\n                });\n            });\n        }).catch((error) => {\n            this.setState({ errorMessage: error.response.data.message });\n        });\n    }\n\n    render() {\n        return (\n            <Container>\n                <h2>All cars, click row to view/modify.</h2>\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error Getting all cars!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>id</th>\n                            <th>make</th>\n                            <th>seats</th>\n                            <th>body type</th>\n                            <th>number plate</th>\n                            <th>colour</th>\n                            <th>cost per hour</th>\n                            <th>fuel type</th>\n                            <th>location</th>\n                            <th>image</th>\n                            <th>current booking</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.cars.map(car =>\n                                <tr style={{ 'cursor': 'pointer' }} key={car.id} onClick={() => this.viewCarDetails(car.id)}>\n                                    <td>{car.id}</td>\n                                    <td>{car.make}</td>\n                                    <td>{car.seats}</td>\n                                    <td>{car.bodytype}</td>\n                                    <td>{car.numberplate}</td>\n                                    <td>{car.colour}</td>\n                                    <td>{car.costperhour}</td>\n                                    <td>{car.fueltype}</td>\n                                    <td>{car.location}</td>\n                                    <td><img alt=\"car\" src={car.image} width={50} /></td>\n                                    <td>{(car.currentbooking === null) ? \"No booking\" : car.currentbooking}</td>\n                                </tr>\n                            )\n                        }\n                    </tbody>\n                </Table>\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(ViewAllCars);\n","/* Modify car details page */\nimport React, { Component } from 'react'\nimport { Container, Button, Alert, Table, Form, Col, Row } from 'react-bootstrap'\nimport CarServiceApi from '../../api/CarServiceApi';\nimport LocationServiceApi from '../../api/LocationServiceApi';\nimport { CAR_COLOURS, CAR_BODY_TYPES, CAR_FUEL_TYPES, CAR_SEATS, FILE_UPLOAD_LIMIT } from '../../Constants.js';\n\nexport default class ModifyCarDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            car: '',\n            locationList: [],\n            make: '',\n            seats: '',\n            bodytype: '',\n            numberplate: '',\n            colour: '',\n            costperhour: '',\n            fueltype: '',\n            location: '',\n            b64photo: '',\n            errMsg: '',\n            successMsg: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleFile = this.handleFile.bind(this);\n    }\n\n    handleFile = (event) => {\n        // handle file upload for car image\n        let files = event.target.files;\n        if (files !== null) {\n            // file size validation\n            if (event.target.files[0].size > FILE_UPLOAD_LIMIT) {\n                return this.setState({\n                    errMsg: 'Image exceeded upload size limit! Please try again with another image.'\n                });\n            }\n            let reader = new FileReader();\n            reader.readAsDataURL(files[0]);\n            reader.onload = (event) => {\n                this.setState({\n                    b64photo: event.target.result,\n                    errMsg: ''\n                });\n            };\n        }\n    }\n\n    inputValidation = () => {\n        const { make, seats, bodytype, numberplate,\n            colour, costperhour, fueltype, location, b64photo } = this.state;\n\n        if (make === '' || seats === '' || bodytype === '' || numberplate === ''\n            || colour === '' || costperhour === '' || fueltype === '' || location === '' || b64photo === '') {\n            this.setState({\n                errMsg: \"Please fill in everything\"\n            });\n            return false;\n        }\n        else {\n            this.setState({\n                errMsg: \"\"\n            });\n            return true;\n        }\n    }\n\n    handleSubmit(event) {\n        // modify car details handler\n        event.preventDefault();\n        if (!this.inputValidation()) {\n            return;\n        }\n        const { car } = this.state;\n        this.setState({\n            disableSubmit: true,\n        });\n        // create car object with modified values\n        let carDetails = {\n            _id: car._id,\n            make: this.state.make,\n            seats: this.state.seats,\n            bodytype: this.state.bodytype,\n            numberplate: this.state.numberplate,\n            colour: this.state.colour,\n            costperhour: this.state.costperhour,\n            fueltype: this.state.fueltype,\n            location: this.state.location,\n            image: this.state.b64photo\n        };\n        // publish modified car object to backend\n        CarServiceApi.updateCar(carDetails).then(res => {\n            this.setState({\n                successMsg: \"Car is successfully updated\",\n                disableSubmit: false,\n                errMsg: \"\"\n            });\n            this.getCar();\n            this.scrollTop();\n        }).catch(err => {\n            this.setState({\n                errMsg: err.response.data.message,\n                disableSubmit: false,\n                successMsg: \"\"\n            });\n        })\n    }\n\n    handleChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    scrollTop() {\n        // scroll window to top\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n        });\n    }\n\n    getCar() {\n        CarServiceApi.getCar(this.props.match.params.id).then(res => {\n            const car = res.data.car;\n            LocationServiceApi.getLocationFromId(car.location).then(res => {\n                car.location = res.data.address;\n                car.locationId = res.data._id;\n                this.setState({\n                    car: car,\n                    make: car.make,\n                    numberplate: car.numberplate,\n                    costperhour: car.costperhour,\n                    seats: car.seats,\n                    colour: car.colour,\n                    bodytype: car.bodytype,\n                    location: car.locationId,\n                    fueltype: car.fueltype,\n                    b64photo: car.image\n                });\n            });\n        }).catch(err => {\n            this.setState({\n                errMsg: err.response\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.getCar();\n\n        LocationServiceApi.getAllLocations().then((res) => {\n            res.data.map(location => this.setState({ locationList: this.state.locationList.concat(location) }));\n        }, (err) => {\n            this.setState({\n                errMsg: err.response\n            });\n        });\n    }\n\n    render() {\n        const { car } = this.state;\n\n        return (\n            <Container>\n                <h2>Car details:</h2>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>id</th>\n                            <th>make</th>\n                            <th>seats</th>\n                            <th>body type</th>\n                            <th>number plate</th>\n                            <th>colour</th>\n                            <th>cost per hour</th>\n                            <th>fuel type</th>\n                            <th>location</th>\n                            <th>image</th>\n                            <th>current booking</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr key={car._id}>\n                            <td>{car._id}</td>\n                            <td>{car.make}</td>\n                            <td>{car.seats}</td>\n                            <td>{car.bodytype}</td>\n                            <td>{car.numberplate}</td>\n                            <td>{car.colour}</td>\n                            <td>{car.costperhour}</td>\n                            <td>{car.fueltype}</td>\n                            <td>{car.location}</td>\n                            <td><img alt=\"car\" src={car.image} width={50} /></td>\n                            <td>{(car.currentbooking === null) ? \"No booking\" : car.currentbooking}</td>\n                        </tr>\n                    </tbody>\n                </Table>\n\n                <h2>Modify details</h2>\n                {this.state.errMsg &&\n                    <Alert variant=\"danger\">\n                        <Alert.Heading>Modify car failed!</Alert.Heading>\n                        <p>\n                            {this.state.errMsg}\n                        </p>\n                    </Alert>\n                }\n\n                {this.state.successMsg &&\n                    <Alert variant=\"success\">\n                        <Alert.Heading>Modify car succeed!</Alert.Heading>\n                        <p>\n                            {this.state.successMsg}\n                        </p>\n                    </Alert>\n                }\n                <Form>\n                    <Form.Group as={Row} controlId=\"formHorizontalMake\">\n                        <Form.Label column sm={2}>\n                            Make\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"make\" type=\"make\" value={this.state.make} onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalSeats\">\n                        <Form.Label column sm={2}>\n                            Seats\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" name=\"seats\" type=\"seats\" onChange={this.handleChange} required>\n                                {\n                                    CAR_SEATS.map((option, index) => {\n                                        const bool = option === car.seats\n                                        return (\n                                            (bool) ? <option key={index} value={option} selected>{option}</option> :\n                                                <option key={index} value={option}>{option}</option>\n                                        )\n                                    })\n                                }\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalBodyType\">\n                        <Form.Label column sm={2}>\n                            Body type\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" name=\"bodytype\" type=\"bodytype\" onChange={this.handleChange} required>\n                                {\n                                    CAR_BODY_TYPES.map((option, index) => {\n                                        const bool = option === car.bodytype\n                                        return (\n                                            (bool) ? <option key={index} value={option} selected>{option}</option> :\n                                                <option key={index} value={option}>{option}</option>\n                                        )\n                                    })\n                                }\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalNumberPlate\">\n                        <Form.Label column sm={2}>\n                            Number Plate\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"numberplate\" type=\"numberplate\" value={this.state.numberplate} onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalColour\">\n                        <Form.Label column sm={2}>\n                            Colour\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" name=\"colour\" type=\"colour\" onChange={this.handleChange} required>\n                                <option disabled selected>Select colour</option>\n                                {\n                                    CAR_COLOURS.map((option, index) => {\n                                        const bool = option === car.colour\n                                        return (\n                                            (bool) ? <option key={index} value={option} selected>{option}</option> :\n                                                <option key={index} value={option}>{option}</option>\n                                        )\n                                    })\n                                }\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalCostPerHour\">\n                        <Form.Label column sm={2}>\n                            Cost per hour\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"costperhour\" type=\"number\" value={this.state.costperhour} onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalFuelType\">\n                        <Form.Label column sm={2}>\n                            Fuel type\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" name=\"fueltype\" type=\"fueltype\" onChange={this.handleChange} required>\n                                <option disabled selected>Select fuel type</option>\n                                {\n                                    CAR_FUEL_TYPES.map((option, index) => {\n                                        const bool = option === car.fueltype\n                                        return (\n                                            (bool) ? <option key={index} value={option} selected>{option}</option> :\n                                                <option key={index} value={option}>{option}</option>\n                                        )\n                                    })\n                                }\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalLocation\">\n                        <Form.Label column sm={2}>\n                            Location\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control as=\"select\" name=\"location\" type=\"location\" onChange={this.handleChange} required>\n                                <option disabled selected>Select location</option>l\n                                {\n                                    this.state.locationList.map((option, index) => {\n                                        const bool = option.address === car.location\n                                        return (\n                                            (bool) ? <option key={index} value={option._id} selected>{option.address}</option> :\n                                                <option key={index} value={option._id}>{option.address}</option>\n                                        )\n                                    })\n                                }\n                            </Form.Control>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalLocation\">\n                        <Form.Label column sm={2}>\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.File\n                                id=\"custom-file\"\n                                label=\"Car Image (4MB max)\"\n                                name=\"b64photo\"\n                                accept=\"image/*\"\n                                onChange={this.handleFile}\n                            />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Col sm={{ span: 10, offset: 2 }}>\n                            <Button onClick={this.handleSubmit} disabled={this.state.disableSubmit}>Update Car</Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </Container>\n        )\n    }\n}\n","/* View all locations page */\nimport React, { Component } from 'react';\nimport { Container, Table, Alert, Button } from 'react-bootstrap';\nimport LocationServiceApi from '../../api/LocationServiceApi';\n\nexport default class ViewAllLocations extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            locations: [],\n            errorMessage: ''\n        };\n    }\n\n    componentDidMount() {\n        // get all locations\n        LocationServiceApi.getAllLocations().then(res => {\n            this.setState({\n                locations: res.data\n            });\n        }).catch(error => {\n            this.setState({\n                errorMessage: error.response\n            });\n        });\n    }\n\n    render() {\n        return (\n            <Container>\n                <h2>All locations, click to view details</h2>\n                {this.state.errorMessage && <Alert variant=\"danger\">\n                    <Alert.Heading>Error Getting all cars!</Alert.Heading>\n                    <p>\n                        {this.state.errorMessage}\n                    </p>\n                </Alert>}\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>id</th>\n                            <th>name</th>\n                            <th>address</th>\n                            <th></th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.locations.map(location =>\n                                <tr style={{ 'cursor': 'pointer' }} key={location._id}>\n                                    <td>{location._id}</td>\n                                    <td>{location.name}</td>\n                                    <td>{location.address}</td>\n                                    <td><Button href={`/admin/modify/location/${location._id}`}>Modify</Button></td>\n                                    <td><Button href={`/admin/view/location/${location._id}`}>View</Button></td>\n                                </tr>\n                            )\n                        }\n                    </tbody>\n                </Table>\n            </Container>\n        )\n    }\n}\n","/* View location page */\nimport React, { Component } from 'react';\nimport { Container, Button, Alert, Table, Col, Row } from 'react-bootstrap';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport LocationServiceApi from '../../api/LocationServiceApi';\nimport CarServiceApi from '../../api/CarServiceApi';\n\nclass ViewLocation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            location: '',\n            errMessage: '',\n            cars: [],\n            successMessage: '',\n            activeMarker: {},\n            showingInfoWindow: false,\n            selectedPlace: {},\n            isLoading: false\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.location.state !== undefined) {\n            this.setState({\n                successMessage: this.props.location.state.success\n            });\n        }\n        // fetch location details by id\n        LocationServiceApi.getLocationFromId(this.props.match.params.id).then(res => {\n            LocationServiceApi.getGeocodeFromAddress(res.data.address)\n                .then(newRes => {\n                    // Create object with address, latitude and longitude\n                    let locationObject = {\n                        id: res.data._id,\n                        address: res.data.address,\n                        name: res.data.name,\n                        lat: newRes.data.results[0].geometry.location.lat,\n                        lng: newRes.data.results[0].geometry.location.lng,\n                        cars: res.data.cars\n                    };\n                    // set new location object to react state array\n                    this.setState({\n                        location: locationObject,\n                        isLoading: true\n                    });\n                });\n            res.data.cars.forEach(carId => {\n                CarServiceApi.getCar(carId).then(res => {\n                    this.state.cars.push(res.data.car);\n                    this.setState({\n                        cars: this.state.cars\n                    });\n                });\n            });\n        }).catch(err => {\n            this.setState({\n                errMessage: err.response\n            });\n        });\n    }\n\n    mapOnMarkerClick = (props, marker) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true,\n        });\n\n    mapOnMapClick = () =>\n        this.setState({\n            showingInfoWindow: false,\n            selectedPlace: {},\n            activeMarker: {}\n        });\n\n    render() {\n        const { location } = this.state;\n\n        return (\n            <Container>\n                {this.state.successMessage &&\n                    <Alert variant=\"success\">\n                        <Alert.Heading>Add bus succeed!</Alert.Heading>\n                        <p>\n                            {this.state.successMessage}\n                        </p>\n                    </Alert>\n                }\n                <h2>Location details:</h2>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>id</th>\n                            <th>name</th>\n                            <th>address</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>{location.id}</td>\n                            <td>{location.name}</td>\n                            <td>{location.address}</td>\n                            <td><Button href={`/admin/modify/location/${location.id}`}>Modify</Button></td>\n                        </tr>\n                    </tbody>\n                </Table>\n                <Container>\n                    {this.state.isLoading && <div style={{ height: '400px' }}>\n                        <Map google={this.props.google}\n                            initialCenter={{\n                                lat: this.state.location.lat,\n                                lng: this.state.location.lng\n                            }}\n                            style={{ height: '400px', width: '50%' }}\n                            zoom={14}\n                            onClick={this.mapOnMapClick}>\n\n                            <Marker\n                                id={this.state.location.id}\n                                name={this.state.location.name}\n                                address={this.state.location.address}\n                                onClick={this.mapOnMarkerClick}\n                                position={{ lat: this.state.location.lat, lng: this.state.location.lng }}\n                            />\n\n                            <InfoWindow\n                                onClose={this.onInfoWindowClose}\n                                marker={this.state.activeMarker}\n                                visible={this.state.showingInfoWindow}>\n                                <div id=\"info-window\">\n                                    <h2>{this.state.selectedPlace.name}</h2>\n                                    <p>{this.state.selectedPlace.address}</p>\n                                    <a href={\"/locations/\" + this.state.selectedPlace.id}>Check out this location</a>\n                                </div>\n                            </InfoWindow>\n                        </Map>\n                    </div>}\n                </Container>\n                <h2>Buses here:</h2>\n                <Row>\n                    {this.state.cars.length !== 0 ? this.state.cars.map(car =>\n                        <CarDescriptionComponent car={car} />\n                    ) : <Col>Garage empty</Col>}\n                </Row>\n            </Container>\n        )\n    }\n}\n\nfunction CarDescriptionComponent(props) {\n    // car description component card\n    const { car } = props\n    return (\n        <Col sm={4}>\n            <div className=\"cars-div-white\" style={{ 'border': 'solid black 2px' }}>\n                <img src={car.image} alt=\"car\" width=\"100\" />\n                <h2 style={{ marginTop: '1vh' }}>{car.make}</h2>\n                <p>{car.fueltype}, {car.bodytype}, {car.seats} seaters, {car.colour}</p>\n                <h5>${car.costperhour} per hour</h5>\n                <h5>Number Plate: {car.numberplate}</h5>\n                <a href={`/admin/view/cars/${car._id}`}><b>Bus ID: </b>{car._id}</a>\n            </div>\n        </Col>\n    );\n}\n\nexport default GoogleApiWrapper({\n    apiKey: \"AIzaSyAIt4zpzH_STYDrjE5_9jg_F1Hc_sOphkY\"\n})(ViewLocation);\n","/* Modify location page */\nimport React, { Component } from 'react';\nimport { Alert, Button, Form, Container, Col, Row } from 'react-bootstrap';\nimport LocationServiceApi from '../../api/LocationServiceApi';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { withRouter } from 'react-router-dom';\n\nclass modifyLocationPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            location: '',\n            address: '',\n            name: '',\n            errMsg: '',\n            gmapsLoaded: false,\n            successMsg: '',\n            disableSubmit: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleAutocomplete = this.handleAutocomplete.bind(this);\n    }\n\n    initMap = () => {\n        this.setState({\n            gmapsLoaded: true,\n        });\n    }\n\n    handleAutocomplete = address => {\n        this.setState({ address });\n    }\n\n    componentDidMount() {\n        // initialise address autocomplete api\n        window.initMap = this.initMap;\n        const gmapScriptEl = document.createElement(`script`);\n        gmapScriptEl.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyAIt4zpzH_STYDrjE5_9jg_F1Hc_sOphkY&libraries=places&callback=initMap`;\n        document.querySelector(`body`).insertAdjacentElement(`beforeend`, gmapScriptEl);\n        LocationServiceApi.getLocationFromId(this.props.match.params.id).then(res => {\n            this.setState({\n                address: res.data.address,\n                name: res.data.name,\n                location: res.data\n            })\n        }).catch(err => {\n            this.setState({\n                errMsg: err.response\n            })\n        })\n    }\n\n    handleSubmit() {\n        // modify location object handler\n        // input validation\n        if (this.state.name === '') {\n            this.setState({\n                errMsg: \"name can't be empty\"\n            });\n            return;\n        }\n\n        this.setState({\n            disableSubmit: true\n        });\n\n        // create modified location object\n        let location = {\n            _id: this.state.location._id,\n            name: this.state.name,\n            address: this.state.address,\n            cars: this.state.location.cars\n        };\n\n        // publish modified location object to backend\n        LocationServiceApi.updateLocation(location).then(res => {\n            this.props.history.push(`/admin/view/location/${location._id}`, { success: \"Successfully updated location\" });\n        }).catch(err => {\n            this.setState({\n                errMsg: err.response.data.message,\n                disableSubmit: false,\n                successMsg: \"\"\n            });\n        });\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    render() {\n        return (\n            <Container>\n                <h2>Modify Location Details</h2>\n                <strong>Location ID:</strong> {this.state.location._id} <br></br>\n\n                {this.state.errMsg &&\n                    <Alert variant=\"danger\">\n                        <Alert.Heading>Modify location failed!</Alert.Heading>\n                        <p>\n                            {this.state.errMsg}\n                        </p>\n                    </Alert>\n                }\n\n                <Form>\n                    <Form.Group as={Row} controlId=\"formHorizontalFirstName\">\n                        <Form.Label column sm={2}>\n                            Name\n                        </Form.Label>\n                        <Col sm={10}>\n                            <Form.Control name=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChange} required />\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"formHorizontalName\">\n                        <Form.Label column sm={2}>\n                            Enter Address\n                        </Form.Label>\n                        <Col sm={10}>\n                            {this.state.gmapsLoaded &&\n                                <PlacesAutocomplete\n                                    value={this.state.address}\n                                    onChange={this.handleAutocomplete}\n                                    onSelect={this.handleSelect}\n                                >\n                                    {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                                        <div>\n                                            <Form.Control\n                                                {...getInputProps({\n                                                    placeholder: 'Search Places ...',\n                                                    className: 'location-search-input',\n                                                    required: true\n                                                })}\n                                            />\n                                            <div className=\"autocomplete-dropdown-container\">\n                                                {loading && <div>Loading...</div>}\n                                                {suggestions.map(suggestion => {\n                                                    const className = suggestion.active\n                                                        ? 'suggestion-item--active'\n                                                        : 'suggestion-item';\n                                                    // inline style for demonstration purpose\n                                                    const style = suggestion.active\n                                                        ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                                                        : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                                                    return (\n                                                        <div\n                                                            {...getSuggestionItemProps(suggestion, {\n                                                                className,\n                                                                style,\n                                                            })}\n                                                        >\n                                                            <span>{suggestion.description}</span>\n                                                        </div>\n                                                    );\n                                                })}\n                                            </div>\n                                        </div>\n                                    )}\n                                </PlacesAutocomplete>\n                            }\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row}>\n                        <Col sm={{ span: 10, offset: 2 }}>\n                            <Button onClick={this.handleSubmit} disabled={this.state.disableSubmit}>Update Location</Button>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(modifyLocationPage);\n","/* App router */\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport LandingPage from './components/landing';\nimport SignUpPage from './components/signup';\nimport LoginPage from './components/login';\nimport MapContainer from './components/map';\nimport UserServiceApi from './api/UserServiceApi';\nimport AuthenticatedRoute from './AuthenticatedRoute';\nimport StaffRoute from './StaffRoute.jsx'\nimport LocationShowPage from './components/locationShow';\nimport FilterCarsPage from './components/bookingComponents/filterCars';\nimport BookingDashboard from './components/bookingComponents/bookingDashboard';\nimport MyBookingPage from './components/bookingComponents/myBookings';\nimport BookingDetailsPage from './components/bookingComponents/bookingDetails';\nimport MyProfilePage from './components/myProfile';\n\n/* Import admin and staff components */\nimport Overview from './components/staffComponents/overview';\nimport AdminSignUpPage from './components/adminComponents/adminSignup';\nimport CreateCar from './components/staffComponents/createCar';\nimport CreateLocation from './components/staffComponents/createLocation';\nimport ViewAllCustomersPage from './components/staffComponents/viewAllCustomers';\nimport ViewCustomerPage from './components/staffComponents/viewCustomer';\nimport ModifyCustomerDetailsPage from './components/staffComponents/modifyCustomerDetails';\nimport ViewAllBookingsPage from './components/staffComponents/viewAllBookings';\nimport ViewBookingPage from './components/staffComponents/viewBooking';\nimport ViewCustomerBookingsPage from './components/staffComponents/viewCustomerBookings';\nimport ViewAllCarsPage from './components/staffComponents/viewAllCars';\nimport ModifyCarDetailsPage from './components/staffComponents/modifyCarDetails';\nimport ViewAllLocations from './components/staffComponents/viewAllLocations';\nimport ViewLocation from './components/staffComponents/ViewLocation';\nimport ModifyLocationPage from './components/staffComponents/modifyLocationPage';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    availableCars: [],\n    pickupTime: \"\",\n    returnTime: \"\"\n  };\n\n  updateCars(availableCars, pickupTime, returnTime) {\n    this.setState({\n      availableCars: availableCars,\n      pickupTime: pickupTime,\n      returnTime: returnTime\n    });\n  }\n\n  componentDidMount() {\n    if (UserServiceApi.isUserLoggedIn()) {\n      UserServiceApi.setupAxiosInterceptors(UserServiceApi.getUserToken());\n    }\n  }\n\n  render() {\n    const { availableCars, pickupTime, returnTime } = this.state;\n    const isUserStaff = UserServiceApi.isUserStaff();\n    const isUserLoggedIn = UserServiceApi.isUserLoggedIn();\n    return (\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route path=\"/signup\" component={SignUpPage} />\n          <Route path=\"/login\" component={LoginPage} />\n          <Route path=\"/locations/:id\" component={LocationShowPage} />\n          <Route path=\"/locations\" component={MapContainer} />\n          {/* Customers only routes */}\n          {!isUserStaff && <AuthenticatedRoute path=\"/filter\" component={(props) => <FilterCarsPage {...props}\n            availableCars={availableCars}\n            pickupTime={pickupTime}\n            returnTime={returnTime} />} />}\n          {!isUserStaff && <AuthenticatedRoute path=\"/dashboard\" component={(props) => <BookingDashboard {...props}\n            updateCars={this.updateCars.bind(this)} />} />}\n          {!isUserStaff && <AuthenticatedRoute path=\"/mybookings/:id\" component={BookingDetailsPage} />}\n          {!isUserStaff && <AuthenticatedRoute path=\"/mybookings\" component={MyBookingPage} />}\n          {!isUserStaff && <AuthenticatedRoute path=\"/myprofile\" component={MyProfilePage} />}\n          {/* Staff and admin only routes */}\n          <StaffRoute path=\"/staff\" component={Overview} />\n          <StaffRoute path=\"/admin/signup\" component={AdminSignUpPage} />\n          <StaffRoute path=\"/admin/addcars\" component={CreateCar} />\n          <StaffRoute path=\"/admin/addlocation\" component={CreateLocation} />\n          <StaffRoute path=\"/admin/view/customers/:id/bookings\" component={ViewCustomerBookingsPage} />\n          <StaffRoute path=\"/admin/view/customers/:id\" component={ViewCustomerPage} />\n          <StaffRoute path=\"/admin/view/customers\" component={ViewAllCustomersPage} />\n          <StaffRoute path=\"/admin/view/bookings/:id\" component={ViewBookingPage} />\n          <StaffRoute path=\"/admin/view/bookings\" component={ViewAllBookingsPage} />\n          <StaffRoute path=\"/admin/modify/customers/:id\" component={ModifyCustomerDetailsPage} />\n          <StaffRoute path=\"/admin/view/cars/:id\" component={ModifyCarDetailsPage} />\n          <StaffRoute path=\"/admin/view/cars\" component={ViewAllCarsPage} />\n          <StaffRoute path=\"/admin/modify/location/:id\" component={ModifyLocationPage} />\n          <StaffRoute path=\"/admin/view/location/:id\" component={ViewLocation} />\n          <StaffRoute path=\"/admin/view/location\" component={ViewAllLocations} />\n        </Switch>\n        {/* <Footer /> */}\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* Car service APIs */\nimport axios from 'axios';\nrequire('dotenv').config();\nconst api_url = process.env.REACT_APP_SERVER_URL + \"/api/cars\" || \"http://localhost:3001/api/cars\";\n\nclass CarServiceApi {\n    createNewCar(newCar) {\n        return axios.post(api_url, newCar);\n    }\n\n    getAllCars() {\n        return axios.get(api_url);\n    }\n\n    getCar(carId) {\n        return axios.get(`${api_url}/${carId}`);\n    }\n\n    searchAvailableCars(search) {\n        return axios.post(api_url + '/availability', search);\n    }\n\n    filterCars(filter) {\n        return axios.post(api_url + '/filter', filter);\n    }\n\n    updateCar(car) {\n        return axios.patch(api_url + `/${car._id}`, car);\n    }\n}\n\nexport default new CarServiceApi();\n"],"sourceRoot":""}